<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>帅羊羊的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shuaiyy.cn/"/>
  <updated>2017-09-18T02:16:38.191Z</updated>
  <id>http://shuaiyy.cn/</id>
  
  <author>
    <name>Shuai yy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2016年玩过的游戏</title>
    <link href="http://shuaiyy.cn/2017/09/18/starve/"/>
    <id>http://shuaiyy.cn/2017/09/18/starve/</id>
    <published>2017-09-18T02:01:43.821Z</published>
    <updated>2017-09-18T02:16:38.191Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="游戏" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="Enjoy" scheme="http://shuaiyy.cn/tags/Enjoy/"/>
    
  </entry>
  
  <entry>
    <title>一只喵喵喵</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/2011-09-21-Cat/"/>
    <id>http://shuaiyy.cn/2017/09/17/教程分享/2011-09-21-Cat/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2016-07-26T07:55:55.512Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/public/img/days/5.jpg" alt="5"></p><p>占位</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/public/img/days/5.jpg&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;占位&lt;/p&gt;

      
    
    </summary>
    
      <category term="资源" scheme="http://shuaiyy.cn/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>明信片互寄</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/XX-2016-09-20-postcard-201609/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/XX-2016-09-20-postcard-201609/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2016-09-25T02:40:25.099Z</updated>
    
    <content type="html"><![CDATA[<p>1、贵州省安顺市开发区学院路25号安顺学院资源与环境工程学院 September，561000…<br>2、河北省石家庄市 桥东区 东三教街 华城绿洲一期6-2-1001 crystal 收 050021<br>3、黑龙江省齐齐哈尔市泰来县第二中学九年级四班 SG 162400 满片实寄不摘抄，内容就写写武大吧。麻烦带上坐标和id（很重要），写好我们互相上图蟹蟹辣<br>4、安徽省六安市舒城县千人桥镇千人桥中学高二七朱进玲收 231300<br>5、湖北省大冶市第一中学高二13班 LXJ收～435000～不挑片～</p><hr><p><strong>未寄出</strong> 6、广西壮族自治区河池市都安县高中442班 林东屹收 530700 要求贼多！</p><p>7、陕西省西安市长安区韦郭路558号，西北政法大学 经济学院 肖亚楠 710100</p><p>8、江苏省徐州市泉山区翟山街道中国矿业大学文昌校区工程管理1麦子收，221000<br>可以互寄两张吗~想要一张武大建筑的，还有一张樱花的~</p><p>9、广东省广州市白云区钟落潭仲恺农业工程学院国贸143，Crystal.510550<br>楼主，我要上面那种风格的可以吗～建筑的又看得到樱花～</p><p>10、广东省惠州市实验中学高二11班阿绾收516000  建筑</p><p> <strong> 未寄出</strong> 11、广东省清远连州市福荣花园1302邮编513400banana收</p><p>12、重庆市北碚区天生路2号西南大学李园6舍初玖（收）400715</p><hr><p>13、四川成都龙泉驿区十陵成都大学经管院 舒锦茗610106</p><p>在我等小透明大学看来武大简直666(成都大学就真是成都大学，不是川大QwQ)</p><p>14、江苏省南京市鼓楼区汉中路282号南京中医药大学收发室，吴骏烨收，21002</p><p>想要摄影的有樱花的那种可以咩⊙▽⊙，</p><p>15、新疆乌鲁木齐天山区五星南路兵团二中高二十一吴雨晨830002，楼主挑片嘛</p><p>16、北京市朝阳区望京中环南路6号 北京中医药大学望京校区 三公寓512 蔺明煊 100102</p><p>17、上海市奉贤区海思路100号上海师范大学61寝室楼204寝 赤芙收 201418 </p><p>两张可以嘛，我可以两张师大也可以师大手绘上海手绘各一，贼喜欢武大，希望一张樱花一张随意~</p><p>18、我的地址，江苏省南京市江宁区龙眠大道639号药大b8陈西维211100</p><p>19、广东省广州市培正路2号培正中学yyy收 510080</p><p>20、上海市闵行区华宁路111号上海电机学院 游瑾扬 200240</p><hr><p>落樱纷纷，如诗如画<br>东湖之滨，珞珈山上<br>山水一程，三生有幸<br>江城多山，珞珈独秀。山上有黉，武汉大学！<br>学大汉武立国<br>自强 弘毅 求是 拓新</p><p>最美你的容颜 国立武汉大学</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、贵州省安顺市开发区学院路25号安顺学院资源与环境工程学院 September，561000…&lt;br&gt;2、河北省石家庄市 桥东区 东三教街 华城绿洲一期6-2-1001 crystal 收 050021&lt;br&gt;3、黑龙江省齐齐哈尔市泰来县第二中学九年级四班 SG 1624
      
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="明信片" scheme="http://shuaiyy.cn/tags/%E6%98%8E%E4%BF%A1%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>2016年9月明信片</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/XX-2016-10-14-postcards-in-Sep/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/XX-2016-10-14-postcards-in-Sep/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2016-10-16T07:31:42.625Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>约好的再见</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/XX-2016-06-30-Graduation-and-future/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/XX-2016-06-30-Graduation-and-future/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2016-06-30T14:20:42.407Z</updated>
    
    <content type="html"><![CDATA[<p><code>因为在本校读研，所以一直没有离开的感觉，直到熟悉的人都离开。山水一程，三生有幸，相逢是缘，写于2016.06.30</code></p><h3 id="我毕业啦"><a href="#我毕业啦" class="headerlink" title="我毕业啦"></a>我毕业啦</h3><p>今天早上和最后一个室友拥抱告别，又一次体会到毕业分别的伤感，由于离校较晚，所有的好友都走在我的前面。6月9号拍摄毕业照，19号院级毕业晚会，20号学院毕业典礼&amp;&amp;学位授予仪式，22号学校的毕业典礼，具体的细节记不清了，只记得有激动有感动也有百般无聊，23号瞬间走光了一半的人，30号是最后离校截止日期。分享一首校友原创的毕业歌曲，超级好听。 <a href="http://t.cn/R5jZgEM" target="_blank" rel="external">武大学子原创毕业歌曲MV《几年》</a></p><p>我的毕业照是好友little D用手机帮我拍的，像素不高但我会珍藏一生。下图背景，逸夫楼（人文馆）。</p><p><img src="http://ww4.sinaimg.cn/large/af9df239gw1f5desyszu1j21kw23ue81.jpg" alt="人文馆"></p><h3 id="我的朋友们"><a href="#我的朋友们" class="headerlink" title="我的朋友们"></a>我的朋友们</h3><p>宿舍的4个人中，cmj留在武汉工作了，他还是个户外旅行达人，估计会是4个人中第一个结婚的，人生赢家。lxc去了帝都联想，被评为future leader，未来肯定一帆风顺，祝他早日成为leader。ljk拿到了南加州的offer，我，lt，yhy还是留在武大读研。吹逼小伙伴lhp去了深圳华为，ysh，教主在魔都。一切从分别开始，遇见更好的自己。</p><h3 id="大学大学"><a href="#大学大学" class="headerlink" title="大学大学"></a>大学大学</h3><p>还想着，我们初次见面，樱花飘落，转眼几年又几天。当年选择武大，感觉是自己一生中做出的最正确的决定。我无法想象如果在一个严肃理性的大学环境中，原本就内向封闭的我会变成啥样，虽然性格是很难改变的，但是武大的轻松自由的氛围一直在潜移默化的影响着我。武大的校训是“自强弘毅、求是拓新”，但武大最想教给我的却是独立和自由。独立生活，独立思考，保持独立的人格和自由的思想，这些我只学到了不足十分之一，我还是那个喜欢逃避，做事不积极主动，不能从对自己负责的角度处理事情，偶尔也会成为自己讨厌的人。如果是以前的我或许都不会意识到哪里出了问题，现在我正在逐渐改变，变得更加成熟。大学里对我影响最大的人还是室友，他们都很优秀，我从他们身上学会了很多。</p><h3 id="未来3年"><a href="#未来3年" class="headerlink" title="未来3年"></a>未来3年</h3><p>研究生要在武大继续读3年，决定与准备读研的过程虽然一路坎坷，最后还是收获了这个。<br><img src="http://ww4.sinaimg.cn/large/af9df239gw1f5dezlizzcj206s078gm2.jpg" alt="研究生录取通知书"></p><p>未来的三年一定要加倍努力，心之所往，不负樱花。<br><code>在此处立个flag，3年后更新。遇见未来更好的自己</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;因为在本校读研，所以一直没有离开的感觉，直到熟悉的人都离开。山水一程，三生有幸，相逢是缘，写于2016.06.30&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;我毕业啦&quot;&gt;&lt;a href=&quot;#我毕业啦&quot; class=&quot;headerlink&quot; title=&quot;我毕业啦&quot;&gt;
      
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随感" scheme="http://shuaiyy.cn/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>我的装机必备软件</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/2016-07-20-software-tools-on-mylaptop/"/>
    <id>http://shuaiyy.cn/2017/09/17/教程分享/2016-07-20-software-tools-on-mylaptop/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2017-05-08T11:14:19.367Z</updated>
    
    <content type="html"><![CDATA[<h3 id="windows美化"><a href="#windows美化" class="headerlink" title="windows美化"></a>windows美化</h3><ul><li>RocketDock 实现mac上的Dock栏</li><li>TrueLancherBar 目录式的任务栏快捷操作入口</li><li>Q-Dir 1分4的资源管理器</li><li>Fliqlo 极客感十足的时钟屏保</li><li>fences2.01 桌面整理，提高效率<ul><li>win10安装破解后，如出现桌面图标无法移动，需要安装破解补丁</li><li><a href="https://pan.baidu.com/s/19ue8G" target="_blank" rel="external">破解补丁</a> </li></ul></li></ul><h3 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h3><ul><li>QQ Internet 国际版QQ，功能少，无广告，消息多时不卡顿</li><li>魔影工厂 音视频格式转换工具</li><li>镜像工具 <ul><li>DAEMON 虚拟光驱</li><li>V-Disk 虚拟光驱</li><li>UltraIso 光驱加载刻录</li><li>win32diskImager 镜像刻录</li></ul></li></ul><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><ul><li>MarkdownPad2 </li><li>notepad++ 替换系统的记事本，打开大文件不卡死，语法高亮，可辅助编程</li><li>sublime text 3 同上，作为Python编辑器很方便</li><li>ultra edit 对二进制支持友好</li></ul><h3 id="虚拟机与镜像"><a href="#虚拟机与镜像" class="headerlink" title="虚拟机与镜像"></a>虚拟机与镜像</h3><ul><li>VMware</li><li>VirtualBox</li><li><a href="http://www.osboxes.org/vmware-images/" target="_blank" rel="external">客户机系统镜像下载，解压直接使用</a></li><li>360隔离沙箱 ：用来运行从网下二进制小程序，</li><li>docker</li></ul><h3 id="翻墙工具"><a href="#翻墙工具" class="headerlink" title="翻墙工具"></a>翻墙工具</h3><ul><li>lantern ：自己编译生成的exe是免安装，无流量限制的</li><li>xx-net ：基于GoAgent实现的，第一次部署比较麻烦，流量每天1G*n（GAE apps）</li><li>ss：配合ss服务器食用</li></ul><h3 id="安卓软件"><a href="#安卓软件" class="headerlink" title="安卓软件"></a>安卓软件</h3><ul><li>微博国际版</li><li>日事清</li><li>Newton 邮件客户端</li><li>JuiceSSh</li><li>双开助手</li><li>BusyBox + 终端模拟器</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;windows美化&quot;&gt;&lt;a href=&quot;#windows美化&quot; class=&quot;headerlink&quot; title=&quot;windows美化&quot;&gt;&lt;/a&gt;windows美化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RocketDock 实现mac上的Dock栏&lt;/li&gt;
&lt;li&gt;Tru
      
    
    </summary>
    
      <category term="资源" scheme="http://shuaiyy.cn/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>买买买</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/XXX-2016-07-15-Buy-Buy-Buy/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/XXX-2016-07-15-Buy-Buy-Buy/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2017-01-23T07:57:33.531Z</updated>
    
    <content type="html"><![CDATA[<p><code>记录我的各种“剁手”行为</code></p><ul><li><p>书籍</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">web scraping with python   16.0电子打印版</div><div class="line">FreeSWITCH 权威指南           14.0PDF</div></pre></td></tr></table></figure></li><li><p>电子数码</p></li><li><p>游戏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Don&apos;t starve together24.0steam game</div><div class="line">Portal 212.0steam game</div></pre></td></tr></table></figure></li><li><p>吃喝嫖赌</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;记录我的各种“剁手”行为&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;书籍&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>魅蓝3s移动版刷机+修改串号</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/2016-10-24-meizu-mobile-meilan3s-imei-change/"/>
    <id>http://shuaiyy.cn/2017/09/17/教程分享/2016-10-24-meizu-mobile-meilan3s-imei-change/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2016-11-06T15:28:34.678Z</updated>
    
    <content type="html"><![CDATA[<p>闲鱼上买了一个全新的魅蓝3s移动版，虽然比在官网买便宜了130块，但是移动定制版，开机logo，系统软件，功能限制，网络限制，特恶心了，果断刷机。</p><hr><h3 id="刷机教程"><a href="#刷机教程" class="headerlink" title="刷机教程"></a>刷机教程</h3><p>刷机教程魅族论坛有。</p><ul><li>移动定制版的系统recovery会验证固件，因此直接刷全网通版的固件会提示固件损坏，无法写入固件。</li><li>使用flashfire刷入全网通的update.zip，<ul><li>首先获取root权限，安装superSU，并重启。</li><li>然后flashfire写入，等待系统自动重启。这时的系统并不是clean的，会有各种问题，相当于只是从移动版升级到全网通，绕过系统的rom检测。</li><li>开机后，使用系统自带的recovery再刷一次全网通的固件，刷时选择清除数据。这是最后一步，然后就是全网通版的魅蓝3s啦。如果还是有相机图库无法使用的情况，恢复出厂设置，或再刷一次全网通固件，记得选清除数据。</li></ul></li></ul><hr><h3 id="修改串号"><a href="#修改串号" class="headerlink" title="修改串号"></a>修改串号</h3><ol><li>在拔号按<em>#</em>#3646633#<em>#</em>–&gt; 进入connectivity</li><li>选 cds information –&gt; radioinformation</li><li>选 phone1(SIM1)</li><li>在command (有A+的位置)列按入”AT +EGMR = 1,7,”你的IMEI””(在输入sim2时改为”AT +EGMR = 1,10, “你的IMEI”)</li><li>按 “SEND ATCOMMAND”</li><li>完成后重启手机</li></ol><p>注意：步骤4中AT和+加个空格（AT +EGMR=1,7,””像这样，+号前加个空格）</p><p>这个不用root   我试过可以改魅族note2</p><hr><p>以下是网上找到的参考</p><ol><li>系统必须降价到Flyme 4.5，因为Flyme5.1工程模式(拨号界面输入<code>*#*#3646633#*#*</code>)没有cds information 选项，无法进行下一步操作；</li><li>选 <code>cds information --&gt; radioinformation</code>之后，选择phone1(SIM1) or phone2(SIM2)时候，最好把2个都搞一下，因为我才开始选择phone1(SIM1)，但是输入*#06#后，还是原来的串号，但是工程模式下却是我要修改的串号，但是再改phone2(SIM2)时候，两个就一样了；</li><li>在输入AT + EGMR = 1,7,”你的IMEI”这一串代码时候，请注意，把原来的AT+删掉，直接输入这一串代码<code>-----AT + EGMR = 1,7,&quot;你的IMEI&quot;</code>（AT和+之间有空格，一定要有）；</li><li>改完之后英文显示ok，要重启，然后再看是不是已经改成功了</li></ol><p>用工具侠或者移动叔叔 应该也是要在Flyme4.5下进行，昨天我是在Flyme5.1下弄的，始终不行</p><p>使用工具侠查看iemi，更改成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;闲鱼上买了一个全新的魅蓝3s移动版，虽然比在官网买便宜了130块，但是移动定制版，开机logo，系统软件，功能限制，网络限制，特恶心了，果断刷机。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;刷机教程&quot;&gt;&lt;a href=&quot;#刷机教程&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="资源" scheme="http://shuaiyy.cn/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>2014年阅读书单</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E9%98%85%E8%AF%BB/Book-List-2014/"/>
    <id>http://shuaiyy.cn/2017/09/17/阅读/Book-List-2014/</id>
    <published>2017-09-17T08:45:30.931Z</published>
    <updated>2017-09-17T14:00:53.297Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="读书" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/%E8%AF%BB%E4%B9%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>明信片互寄</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/XX-2016-06-12-postcards-sending/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/XX-2016-06-12-postcards-sending/</id>
    <published>2017-09-17T08:45:30.929Z</published>
    <updated>2016-06-12T02:20:19.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>想要和我互寄明信片的留言地址哦~~</p></blockquote><p>好久没寄明信片了，手上还有很多明信片。记得大一时经常和网友互寄明信片，每次去check信箱时都会特别开心，我的明信片都是室友老曹代写的哈哈，他字写的好看^.^</p><p>下学期打算开始新的明信片互寄，现在信箱地址还不确定，先写下这篇文章占位，后期再更新~~</p><p><img src="http://ww3.sinaimg.cn/large/af9df239gw1f4s7zd2kzyj20nb0fxdir.jpg" alt="明信片1"><br><img src="http://ww1.sinaimg.cn/large/af9df239gw1f4s8085sjcj20my0ft42d.jpg" alt="明信片2"><br><img src="http://ww3.sinaimg.cn/large/af9df239gw1f4s80xl14cj20n60fbn0m.jpg" alt="明信片3"></p><blockquote><p>相识是一种缘分。<br>哈哈。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;想要和我互寄明信片的留言地址哦~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好久没寄明信片了，手上还有很多明信片。记得大一时经常和网友互寄明信片，每次去check信箱时都会特别开心，我的明信片都是室友老曹代写的哈哈，他字写的好看^.^&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="明信片" scheme="http://shuaiyy.cn/tags/%E6%98%8E%E4%BF%A1%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>计算机考研个人经历</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/2016-07-22-Something-with-NEEP-of-WHU/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/2016-07-22-Something-with-NEEP-of-WHU/</id>
    <published>2017-09-17T08:45:30.928Z</published>
    <updated>2017-01-23T07:56:26.586Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文写于2016年07月21日，因为有很多人问我考研经验和各种问题。回答每个宝宝的十万个为什么真的很心累，而且有些人也没下定决心要考研武大。</p><p>我是16年考研，本科武大计院，报考本院学硕计科一级学科，二级学科信息安全，具体方向信息系统安全，最后进了通信与信息系统。初试359，73,76,88,122。初试分数线335。复试跪了，调剂进了通信专业。</p><p>我很菜的，但这种考试都是从小考到大，只要我按计划复习，刷刷题，结果都不会差，所以我觉得这种机械应试能力一般人还是干不过我的。其实也很苦逼，一个人搬出宿舍租房子，每天自习室待到10点，手机换成黑白屏的诺基亚，A4纸用了大概1K张。</p><p>以下内容全是瞎扯的，个人观点不要当真，仅供娱乐，概不负责。</p></blockquote><h3 id="十万个为什么"><a href="#十万个为什么" class="headerlink" title="十万个为什么"></a>十万个为什么</h3><ul><li><p>Q of All </p><p>高中学习，不会有人教，考哪里有人圈重点，定期测验检验你的学习效果，周围人都在学习的氛围很好，还没考上好大学的话，可能是智商不够，运气差，或者当时心智不成熟。</p><p>but，现在你决定要考研，天时地利全都没有，高校保研的人数大概是考研名额的2~3倍。150万的考生3分之1有学上，想上个好点的，大概10分之1的可能性吧。</p></li><li><p>Q1、哪个专业好考？</p><ul><li>国软&lt;计院</li><li>计院内：通信&lt;软工&lt;计科</li><li>专硕&lt;学硕 ，非985,211就别考学硕了，根本没戏，因为名额太少，但是有夏令营资格的就很easy。 </li></ul></li><li><p>Q2、夏令营啥情况？</p><ul><li>优秀营员可以免复试录取，初试过国家线即可。大概考300分就够了。</li><li>怎么参加别问我，大概时间是6、7月份，关注计院网站通知吧。形式上午笔试，下午面试。</li></ul></li><li><p>Q3、普通本科学校能考上985吗？</p><ul><li>能啊，专硕还是比较容易的。你要是考不过初试线，那就算了吧。</li><li>复试会被歧视吗，会，如果你的学校跟武大有仇，比如某学校来的孩子搞坏了上百万的实验室设备，以后都没招过这个学校的学生。</li><li>会有劣势吗，会。但专硕复试中自少一半的人不是名校来的，最重要的是要有实力，学历，颜值，专业能力，交往都是实力的一部分。</li></ul></li><li><p>Q4、武大计算机考研相关资料</p><ul><li>计算机学院的专业课933，包括计组、计网、计操，数据结构。英数政公共课没啥说的。</li><li>资料书，参考书<ul><li>专业课用业内好评的教材就可以，我觉得武大的教材并不好，只用了天勤的4本+天勤8套模拟（错误真多）+王道的8套，其他品牌的辅导书都是垃圾，买了一本新东方的看了第一章就把书给撕了。其实天勤的只数据结构出色，其他的建议用王道考研。非计算机专业的还是有必要好好看看教材的。</li><li>英语，张剑150篇，考试虫作文，张剑模拟6套，真题。单词书用的新东方的，真厚，很多不是重点单词，浪费我时间，推荐何凯文的。我不喜欢看视频教程，虽然下了很多，这里就推荐一下何凯文的单词演讲视频吧，可以记下大概200个高频词汇，对单词也有更深的认识，背单词书或做阅读时一眼就能看出哪些不是重点单词。</li><li>政治，肖1000，肖4，风中劲草，蒋政治全书，肖时政，真题。</li><li>数学，复习全书一套含（模拟题，真题），单独真题。  </li></ul></li><li>我把我用过的资料整理了一下，挂在闲鱼上了。</li></ul></li><li><p>Q5、你报的哪个方向？</p><ul><li>前文已讲。学硕有通信、软工、计科，下设二级学科，然后是对应研究方向。专硕不太清楚，应该是没分二级学科这么具体，而是录取后在选择的？</li></ul></li><li><p>Q6、你认为你的导师怎么样？</p><ul><li>你想干嘛！？ 武大的老师无论学术人品有啥好怀疑的？有的实验室做的项目或工作会比较坑，和导师没关系。提前联系导师吗？外校的还是确定能进复试在说吧。。。</li></ul></li><li><p>Q7、参考书</p><ul><li>见下文</li></ul></li><li><p>Q8、我有学校内部消息吗？</p><ul><li>抱歉，啥也没有！</li></ul></li><li><p>Q9、考研期间你觉得最重要的是啥？如何复习的？</p><ul><li>我没想那么多。复习见下文。</li></ul></li><li><p>​</p><h3 id="初试经验"><a href="#初试经验" class="headerlink" title="初试经验"></a>初试经验</h3></li><li><p>坚持就是胜利</p><p><code>坚持到最后也不一定会有好下场的！</code></p></li><li><p>方法</p><p><code>如果你比别人更努力更辛苦,却还是担心考不上，你就要想想工地上的工人流的汗水最多，是不是应该拿最高的工资呢！</code></p></li><li><p>状态</p><p><code>我就没有找到过最好学习的状态，所以该怎么学就怎么学喽~</code></p></li><li><p>辅导班和资料书</p><p><code>反正我觉得没必要，浪费我时间和money。参考书，买书要慎重，买了就要看，发现不好用，赶紧扔了。。。</code></p></li><li><p>数学</p><ul><li>复习的时间最长，考的最烂。</li><li>考试考蒙了，做错了2道简单的大题，本来以为数学只能考60分。</li><li>复习全书看了2遍，第一遍做了例题和课后题，第二遍只做了例题。我后悔做章节的题了，浪费大量时间，卵用没有，又偏又难考试根本不会用这种为了出题而出题的角度去出题。</li><li>真题做了2遍，模拟题一遍。全是按考试来模拟的，用A4纸写答案，后来装订了一本。真题第一遍得分100左右，然后做模拟，得分70~90。最后第二遍真题得分130~140。感觉数学1也就那样，考120分没问题啊。结果出题难度堪比模拟，很多人出来大呼坑爹，我当时也是心态爆炸。</li><li>考试时的草纸让我震惊啊，比A5纸还小一点，只有一张，还是彩虹系列，粉的，黄的，蓝的，绿的，4场考试4种颜色。当然草纸不够用可以用试卷或再问老师要，大多数人都没要第二张草纸，所以大家都很牛逼啊。</li><li>考的不顺利，别慌。遇到太难的就放弃。下午还有专业课呢，虽然数学炸了，专业课扳回一局也是可以的。</li></ul></li><li><p>英语</p><ul><li>单词<ul><li>选一本薄的词汇书啃，看到单词知道2个意思就OK了。只看每页的最下边有助记词汇，不认识的画一个圈。我这样快速背了5遍，有大概300个5星词汇，整理笔记之。</li><li>做阅读时记单词，从张剑阅读里整理了大约200个词汇，真的是高频词汇反复出现。</li><li>做模拟题真题时整理的词汇。</li><li>前期整理了大概900多单词，9月份就把单词书扔了，改背笔记。10月中旬又觉得好多单词没必要背，从中选了大概400个，一直背到考试。</li></ul></li><li>阅读<ul><li>前期就当熟悉套路了，主要记单词。一般5错3，一次一个小时做4篇。有时候觉得答案解析都不能说服我，哈哈。后期单词跟上了，阅读也适应了，大概5错1。 </li></ul></li><li>作文<ul><li>预期考个70%的分数的，就整理模板吧。</li><li>我用的考试虫，但我觉得他的模板也不是很好，感觉就是能得50%的分。我一共整理了10篇小作文模板和7篇大作文模板，反正原模板只要有我觉得在考场写起来不顺手的一律改成自己喜欢的或干脆不用那句话。如果用模板能在考场一气呵成，十分开心的迅速写完作文，目的就达到了，只要不跑题，字体还可以，语法不出错，我不信得分会低。但是你要是写不完或是草草结尾，作文分数就祈祷上帝吧。做模拟或真题时我就是这种状态，10分钟小作文，20分钟内完成大作文，写完读起来自己都觉得，就我这小水平给我一天时间来改还是这样。 </li></ul></li><li>完型、新题型、翻译<ul><li>这些是有技巧的，我是直接放弃专门训练。用模拟和真题练练感觉就OK了。完型2错1，另外2个拿50~70%的分数就有很大的性价比了。翻译一般2分，分成4个0.5，直译不行就歪译，歪译也不行，就1句话拆2或2合1，改变语序位置之类，遇到是在不认识的单词就蒙呗。新题型说到底还是看阅读能力。</li></ul></li></ul></li><li><p>政治</p><ul><li>复习全书要看死宝宝了，看一章，做一章肖1000题。然后就知道知识点了，整理错题及笔记后扔掉2本书。</li><li>风中劲草虽然全是知识点，但我一点也看不进去。复习还是主要靠笔记。</li><li>然后认真整理了马原的知识点，好像是辩证法、认识论之类的，反正答题起来一套一套的，然后做了2010年以前的真题，按考试模拟，用的A4纸写答案。就是在你觉得知道很多却没记住或写不出来的状态下去找感觉，然后就有一种蜜汁自信，哈哈，感觉怎么考都能考60分。</li><li>肖八套模拟尽量早作，肖四套和近5年真题是重点，后期练手时做。肖4是要背的，没啥好说的，肖八如果有精彩的让你非背不可，就背一下吧。</li><li>时政和世界经济，关注和党、和中国相关的，这是重点，谁会关心像法国恐怖事件之类的事呢，我们只关心中国是热爱和平反对恐怖主义的。</li><li>政治答题模式，做真题时对比答案就会发现。马原主观题官方答案很有条理。我答题都是123456小标号，逻辑清晰，每一条踩中他就得给我分，踩偏的也不会扣分。所以我主观题部分估计得分在40+，客观选择题错了不少，毕竟政治复习用的时间最少，又憎恨看书背书。</li><li>关于对我党的个人看法：这直接决定你政治能不能学好。很多人对党有偏见，党员腐败问题严重也是事实，但是党内绝大多数人都是社会精英啊，总不会让一群蠢材去领导13亿人民吧。你入不入党无所谓，难道考研不是为了成为社会精英，变得更优秀嘛。以后大部分党员都是大学生（知识分子），而且社会精英人才大部分也是大学生，所以政治教育是为了培养政治素养和共同信仰，一块做中国梦喽。从感性的角度讲就当是体量党的良苦用心吧，现实生活中搬砖才是正解。</li></ul></li><li><p>专业课</p><blockquote><p>因为学硕和专硕考的不太一样，公共课你们也有自己的学习方法，专业课因为我是本科计算机，跨考的我就不知道怎么复习了。</p></blockquote></li><li><p>专业课是自主命题，计算机学院的科目代码933计算机综合，包含计组计网计操数据结构。考研大纲官方说用的是全国卷408的大纲。呵呵，也就是说没有大纲。出题难度比408简单，范围小，有的地方偏。</p><ul><li>专业课书籍，计科的可以不看书，看王道复习就可以了，实在不理解了，在去翻课本吧。非计科的学生，推荐计网：谢希仁的；数据结构：清华严蔚敏或其他C/c++的口碑好的，不建议用java版；操作系统：国内大学教材谁的好用谁的；计组：清华版的。<strong>别用专业类的书或国外的书</strong>，国内教材都是偏原理很肤浅的适合考试，而且各家抄来抄去，你懂得。所以别太纠结这个教材哪家强的问题。</li><li>我复习时直接刷完了4本天勤的书，做完习题就做8套模拟和真题了，后来发现408的模拟跟武大的933有很多出入，好坑啊，浪费很多时间。所以先做武大真题，在做8套模拟。<ul><li>数据结构：偏爱树，线性表太简单，图太难，不会出编程题，只有二叉树。其他的算法也要会用类c写出来，我能告诉你我是整理到笔记上，然后背下来的嘛！图的几个复杂算法太难背了，至少要知道原理及功能，万一考到了，写上结构体，几个函数定义，加上注释也能拿分的。程序题我是爱写注释的，让你看手写的代码你也会发疯的好吧。</li><li>计网：网络拓扑年年都考啊，子网划分之类的，一道大题啊。然后就是其他的协议之类的</li><li>计组：这个是真难，还好没考到微处理器，指令微操作之类的，不然准跪。考了程序数据和内存映射的关系，这个我也是瞎做的。第二个大题是cpu和内存，cache之间的关系，这个简单。408好像爱考进制转换之类，编码海明码求解之类的要算半天的那种题，超级费劲，933从来补考，我在那上面浪费很多时间搞明白了，后来才发现真是日了狗，408去掉这些难度要降一成，而且408不考微操作，933考了好几次。cpu、内存、cache映射这个是重点。</li><li>操作系统<ul><li>互斥和同步，涉及写伪代码算法，是大题。</li><li>其他的概念性的题居多，考选择，不难。</li></ul></li></ul></li></ul></li></ul><h3 id="复试"><a href="#复试" class="headerlink" title="复试"></a>复试</h3><blockquote><p>我复试跪了，面试表现不太好。复试学硕是19选10，但有6个夏令营已经确定了，于是变成13选4，有3个武大的，另外一个是普通大学，但初试分很高。所以竞争残酷，而自身实力不济，不想多说。</p></blockquote><ul><li>笔试（占复试成绩40%）<ul><li>数据库原理（计科，软工）<ul><li>找本习题书啃下来就OK了</li><li>关系数据库，范式啥的是重点</li></ul></li><li>数字信号处理（通信）<ul><li>具体不清楚   </li></ul></li><li>英语听力 <ul><li>6级难度，但是形式完全不一样，全选择题，有题目和选项，听力内容全是场景应用型的，需要在听懂的基础上稍作分析，给的备选答案也不是在原文中就能找到的，比如两个人对话又聊上课又聊考试又聊兼职，最后问你对话发生在哪里。听懂对话真的很容易，6级只是难在我听不懂听力说的啥。 </li></ul></li><li>都是100分的卷面，听力占笔试10%，专业课占90%</li></ul></li><li>面试（60%）<ul><li>英语口语（占面试10%）<ul><li>自我介绍</li><li>讲个人项目经历</li></ul></li><li>问答（90%）<ul><li>问项目的东西较多</li><li>问你的研究方向</li></ul></li></ul></li><li>机考（专硕）<ul><li>编程题，c或java实现，能运行的那种。</li><li>好像有选择题？</li><li>都很简单，hello world级别，是考你基础，不是选拔，毕竟还有跨考的，就算是计科的，大多数编程也很菜，考研期间也很少写代码，熟练度也会降低之类的。</li><li>编程IDE学校实验室电脑装有DEV-c，vc++6.0，Java eclispe，vs10，这不是重点</li><li>肯定准备复试的时候要码几个简单的小程序练练手</li><li>看看往年机考的原题</li></ul></li></ul><h3 id="总评"><a href="#总评" class="headerlink" title="总评"></a>总评</h3><p>总评=初试成绩的60%+复试成绩的40%</p><h3 id="整体学习节奏"><a href="#整体学习节奏" class="headerlink" title="整体学习节奏"></a>整体学习节奏</h3><blockquote><p>学硕我就觉得数学最难了，用的时间也最长。专硕考试好像各科都简单，具体情况自行分析。</p></blockquote><ul><li>暑假开始前背了3遍单词书，做了张剑阅读150，做完一遍数1全书</li><li>7月第一周回家休息了，然后回校复习。做了第二遍数1，英语不记得看的啥了。</li><li>8月开始政治全书加肖1000，数学继续啃书，英语还是在背单词做阅读。</li><li>9月重点专业课，10月中旬才看完。看完第二遍数1。做完肖一千。英语阅读和单词。</li><li>10月做了政治真题2010年前的英语作文模板背诵，各科基础复习都finish了。</li><li>单词一直在看，笔记也一直在做。</li><li>我做笔记一般整理解题思路和错题，重要背诵知识点，单词。做笔记的目的就是要看的，11月份我基本上复习书都扔一边了，考试前一周随身带的只有笔记和各科试卷题。</li><li>11月搬出宿舍租房子去了，开始8点到自习室，10点回去，全天刷题模拟考的模式，一直到考研。淘宝买500张A4纸才不到20块，把答题纸最后订一块绝对是复习查错的最佳材料。</li><li>每天计划<ul><li>早上 9点开始，30分钟单词，数学。</li><li>下午 2点开始，英语阅读1h，整理半小时，然后数学</li><li>晚上 数学或专业课</li><li>10月份以后是8点到自习室，上午数学or政治，下午英语，晚上专业课。</li></ul></li><li>整体计划<ul><li>暑假前快速看完一遍数学和词汇</li><li>暑假重点是英语和数学，搞定基础复习</li><li>9月10月重点专业课和政治，10月底结束各单科复习</li><li>11月刷题模拟</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><code>为啥要考研啊</code></li><li><code>考研真难真累</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文写于2016年07月21日，因为有很多人问我考研经验和各种问题。回答每个宝宝的十万个为什么真的很心累，而且有些人也没下定决心要考研武大。&lt;/p&gt;
&lt;p&gt;我是16年考研，本科武大计院，报考本院学硕计科一级学科，二级学科信息安全，具体方向信息系统安
      
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>2016年玩过的游戏</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%94%9F%E6%B4%BB-%E7%94%B5%E5%BD%B1%E9%9F%B3%E4%B9%90%E6%97%85%E8%A1%8C%E6%91%84%E5%BD%B1/2016-06-01-Game-of-2016/"/>
    <id>http://shuaiyy.cn/2017/09/17/生活-电影音乐旅行摄影/2016-06-01-Game-of-2016/</id>
    <published>2017-09-17T08:45:30.927Z</published>
    <updated>2017-04-28T03:14:05.869Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="生活" scheme="http://shuaiyy.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="Enjoy" scheme="http://shuaiyy.cn/tags/Enjoy/"/>
    
  </entry>
  
  <entry>
    <title>SNMP调研</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2016-07-04-Survey-of-SNMP-protocol/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2016-07-04-Survey-of-SNMP-protocol/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2017-02-22T09:01:19.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SNMP的发展应用调研报告"><a href="#SNMP的发展应用调研报告" class="headerlink" title="SNMP的发展应用调研报告"></a>SNMP的发展应用调研报告</h1><h2 id="第1章-SNMP基础概述"><a href="#第1章-SNMP基础概述" class="headerlink" title="第1章 SNMP基础概述"></a>第1章 SNMP基础概述</h2><h3 id="1-1、SNMP简介"><a href="#1-1、SNMP简介" class="headerlink" title="1.1、SNMP简介"></a>1.1、SNMP简介</h3><p>简单网络管理协议（SNMP），由一组网络管理的标准组成，包含一个应用层协议（application layer protocol）、数据库模型（database schema）和一组资源对象。该协议能够支持网络管理系统，用以监测连接到网络上的设备是否有任何引起管理上关注的情况。<br>SNMP是internet协议簇的一部分,目标是管理互联网Internet上众多厂家生产的软硬件平台。</p><p>SNMP产生背景：<br>网络的迅速发展和普及使得以下几个问题日益突出：</p><ul><li>网络规模逐渐增大，网络设备数量成级数增加，网络管理员很难及时监控所有设备、发现并修复故障；</li><li>网络设备很可能种类不同、生产厂家不同、型号不同，如果为每种网络设备都提供一套独立的管理接口和协议，将使网络管理越来越困难。<br>为解决以上两个问题，一套覆盖服务、协议和管理信息库的标准——SNMP孕育而生。</li></ul><p>SNMP网络包含3个组件：</p><ul><li>被管理的设备<br>每一个被管理的设备自身都在维护一个管理信息库(MIB),用来收集存储管理信息。</li><li>SNMP代理（Agent）<br>运行在被管理的设备上的网络管理软件模块，能将MIB中的信息转换成为SNMP协议兼容的格式并发给NMS，同时SNMP Agent使用UPD协议在161端口上接收的NMS请求。。</li><li>网络管理系统（NMS）<br>NMS实现监控设备的功能，为网络管理提供相应的处理程序和存储资源。SNMP manager可以使用任意端口向Agent发出请求。SNMP Manager使用162端口接收请求。</li></ul><p>SNMP工作原理：通常由一个系统管理一个或多个设备或系统，被管理的系统上运行SNMP代理，并通过SNMP协议对管理系统报告信息，管理系统可以通过SNMP协议询问设备信息，发送配置更新或设备控制请求。所有的信息元数据都以管理信息库(MIBs)的方式描述。</p><p>SNMP工作模型如下图：</p><p><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5nwbn5zdgj206404owep.jpg" alt="SNMP应用模型图"></p><h3 id="1-2、协议发展历史"><a href="#1-2、协议发展历史" class="headerlink" title="1.2、协议发展历史"></a>1.2、协议发展历史</h3><pre><code>&gt; 目前SNMP的最新标准是IETF在2004年通过 RFC 3411–RFC 3418确定的SNMPv3，V3之前的版本在Internet Standard 标准中被废止。</code></pre><ul><li>1989年—— SNMPv1</li><li>1991年—— RMON(Remote Network Monitoring 远程网络监视)，它扩充了SNMP的功能，包括对LAN的管理及对依附于这些网络的设备的管理。RMON 没有修改和增加SNMPv1，只是增加了SNMP监视子网的能力。</li><li>1993年—— SNMPv2(SNMPv1的升级版)</li><li>1995年—— SNMPv2正式版，其中规定了如何在基于OSI的网络中使用SNMP</li><li>1995年—— RMON扩展为RMON2</li><li>1998年—— SNMPv3，一系列文档定义了SNMP的安全性，并定义了将来改进的总体结构，SNMPv3可以和SNMPv2、SNMPv1一起使用。</li></ul><p>　　目前广泛应用的协议版本是SNMPv2c和SNMPv3</p><p><img src="http://o8i01ajlj.bkt.clouddn.com/16-7-4/21236217.jpg" alt="SNMP发展历程"><br>　　　　　　　　　　　　　　　　　　图：SNMP发展历程</p><p><img src="http://o8i01ajlj.bkt.clouddn.com/16-7-4/57684050.jpg" alt="SNMP版本改进"><br>　　　　　　　　　　　　　　　　　　图：SNMP版本改进</p><h3 id="1-3、SNMP相关术语速查"><a href="#1-3、SNMP相关术语速查" class="headerlink" title="1.3、SNMP相关术语速查"></a>1.3、SNMP相关术语速查</h3><ul><li><p><strong>SNMP</strong>：Simple Network Management Protocol(简单网络管理协议)，是一个标准的用于管理基于IP网络上设备的协议。</p></li><li><p><strong>MIB</strong>：Management Information Base(管理信息库)，定义代理进程中所有可被查询和修改的参数。</p></li><li><p><strong>OID</strong>：对象标识符，是SNMP代理提供的具有唯一标识的键值，记录在MIB中。MIB 提供数字化OID到可读文本的映射。MIB的数据是树状结构，可以使用<a href="http://sourceforge.net/projects/snmpb/" target="_blank" rel="external">snmpB</a>之类的工具进行查询、搜索存储在MIB中的被管理对象。设备厂商可以向IEEE在MIB库申请注册一个分支结点，其下的每个叶子结点对应该设备厂商的实现的功能对象OID。</p><pre><code>比如，CloudStack使用的MIB分支是：1.3.6.1.4.1.18060.15 ，其中.1.3.6.4表示该OID是以.iso.org.dod.internet.private开头的，可以从MIB根结点进行完全验证，其后的.1是表示企业，18060 是分配给apache的企业代码，15是分配给CloudStack项目的根代码，所有CloudStack的SNMP OID代码都在1.3.6.1.4.1.18060.15 分支下。</code></pre></li><li><p><strong>SMI</strong>：Structure of Management Information(管理信息结构)，SMI定义了SNMP中使用到的ASN.1类型、语法，并定义了SNMP中使用到的类型、宏、符号等。SMI用于后续协议的描述和MIB的定义。每个版本的SNMP都可能定义自己的SMI。</p></li><li><p><strong>ASN.1</strong>：Abstract Syntax Notation One(抽象语法定义)。用于定义语法的正式语言，在SNMP中定义SNMP的协议数据单元PDU和管理对象MIB的格式。SNMP只使用了ASN.1中的一部分，而且使用ASN.1的语言特性定义了一些自定义类型和类型宏 ，这些组成了SMI。</p></li><li><p><strong>PDU</strong>： Protocol Data Unit(协议数据单元)，它是网络中传送的数据包。每一种SNMP操作，物理上都对应一个PDU。</p></li><li><p><strong>NMS</strong>： Network Management System，网络管理系统，又名网络管理站，简称“管理站”。它是SNMP的总控机，提供统一的用户界面访问支持SNMP的设备，一般提供UI界面，并有统计、分析等功能，是网管系统的总控制台。NMS是网络管理操作的发起者。</p></li><li><p><strong>Agent</strong>： 是SNMP的访问代理，简称“代理”，为设备提供SNMP能力，负责设备与NMS的通信。</p></li><li><p><strong>Proxy</strong>： 代理服务器，对实现不同协议的设备进行协议转换，使非IP协议的设备也能被管理。</p></li><li><p><strong>Trap</strong>： 是由设备主动发出的报警数据，用于提示重要的状态的改变。</p></li><li><p><strong>BER</strong>： Basic Encoding Rule，基本编码规格。描述如何将ASN.1类型的值编码为字符串的方法。它是ASN.1标准的一部分。BER编码将数据分成TLV三部分，T为Tag的缩写，是类型标识；L为Length的缩写，标识类型的长度；V为Value的缩写，标识数据内容。按照TLV的顺序对数据进行编码，生成字节流。SNMP使用BER将SNMP的操作请求和应答编码后进行传输，并用于接收端进行解码。</p></li></ul><h2 id="第2章-SNMP-分析"><a href="#第2章-SNMP-分析" class="headerlink" title="第2章 SNMP 分析"></a>第2章 SNMP 分析</h2><h3 id="2-1、SNMP-结构模型"><a href="#2-1、SNMP-结构模型" class="headerlink" title="2.1、SNMP 结构模型"></a>2.1、SNMP 结构模型</h3><ul><li><p>SNMP基于TCP/IP协议工作，对网络中支持SNMP协议的设备进行管理。因此管理员可以使用统一的操作进行管理设备，而不必理会设备是什么类型、是哪个厂家生产的。如下图，<br><img src="http://ww3.sinaimg.cn/large/af9df239gw1f5npeo5mq3j20jd0ceq3l.jpg" alt="设备-管理模型图"></p></li><li><p>SNMP支持的网络管理操作，如下图：　　</p></li></ul><p>　　<img src="http://ww3.sinaimg.cn/large/af9df239gw1f5npka42a0j20dt09r3yu.jpg" alt=""></p><ul><li><p>Get：读取网络设备的状态信息(设备的配置、参数、状态等)。</p></li><li><p>Set：远程配置设备参数。</p><ul><li>Trap：设备主动汇报重要状态信息。</li></ul><p>在具体实现上，SNMP为管理员提供了一个网管平台(NMS)，又称为管理站，负责网管命令的发出、数据存储、及数据分析。被监管的设备上运行一个SNMP代理(Agent))，代理实现设备与管理站的SNMP通信。如下图，<br><img src="http://ww2.sinaimg.cn/large/af9df239gw1f5nq01s90yj20ic0duwfq.jpg" alt=""></p></li></ul><p>管理站与代理端通过MIB进行接口统一，MIB定义了设备中的被管理对象。管理站和代理都实现了相应的MIB对象，使得双方可以识别对方的数据，实现通信。管理站向代理申请MIB中定义的数据，代理识别后，将管理设备提供的相关状态或参数等数据转换为MIB定义的格式，应答给管理站，完成一次管理操作。</p><p>网络上的许多设备，路由器、交换机等，都可以通过添加一个SNMP网管模块而增加网管功能。服务器可以通过运行一个网管进程实现。其他服务级的产品也可以通过网管模块实现网络管理，如Oracle、WebLogic都有SNMP进程，运行后就可以通过管理站对这些系统级服务进行管理。</p><p> 根据管理者和被管理的设备在网络管理操作中的不同职责，SNMP定义了3种角色。如下图，<br><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5nq2mauvyj20cs08j0t1.jpg" alt=""></p><p>网络管理系统：又称管理站、NMS。是系统的控制台，向管理员提供界面以获取与改变设备的配置、信息、状态、操作等信息。管理站与Agent进行通信，执行相应的Set和Get操作，并接收代理发过来的警报(Trap)。</p><p>代理：Agent是网络管理的代理人，负责管理站和设备SNMP操作的传递。介于管理站和设备之间，与管理站通信并相应管理站的请求，从设备获取相应的数据，或对设备进行相应的设置，来响应管理站的请求。代理也需要具有根据设备的相应状态使用MIB中定义的Trap向管理站发送报告的能力。</p><p>代理服务器：Proxy是一种特殊的代理，在不能直接使用SNMP协议的地方，如：异种网络、不同版本的SNMP代理等情况，Proxy代替相关设备向管理站提供一种外观，为设备代理SNMP协议的实现。Proxy做了异种网络或不同版本代理和相应SNMP数据请求的转换工作。如下图，<br><img src="http://ww2.sinaimg.cn/large/af9df239gw1f5nq4fkeslj20ir0avmy0.jpg" alt=""></p><h3 id="2-2、ASN-1、BER、SMI、MIB、PDU的关系"><a href="#2-2、ASN-1、BER、SMI、MIB、PDU的关系" class="headerlink" title="2.2、ASN.1、BER、SMI、MIB、PDU的关系"></a>2.2、ASN.1、BER、SMI、MIB、PDU的关系</h3><p><img src="http://ww2.sinaimg.cn/large/af9df239gw1f5nq6c1bnmj20fa0aymxu.jpg" alt=""></p><ul><li><p>ASN.1：高级的数据描述语言。描述数据的类型、结构、组织、及编码方法。包括符号和语法两部分。SNMP使用ASN.1描述PDU和管理学对象信息库MIB。</p></li><li><p>BER：ASN.1的基本编码规则。描述具体的ASN.1对象如何编码为比特流在网络上传输。SNMP使用BER作为编码方案，数据首先先经过BER编码，再经由传输层协议(一边是UDP)发往接收方。接收方在SNMP端口上收到PDU后，经过BER解码后，得到具体的SNMP操作数据。</p></li><li><p>SMI：是SNMP的描述方法。规定了使用ASN.1子类型、符号。ASN.1功能强大，但SNMP只用到了其中很小一部分，对于这一部分内容的描述，限定了范围，即为SMI。SMI规定了使用到的ASN.1类型、宏、符号等。SMI是ASN.1的一个子集和超集。</p></li><li><p>MIB：是SNMP中使用到的管理信息库。定义了数据格式、类型、顺序、意义等，使用SMI中定义的类型和ASN.1中的基本类型对对象进行描述，是一个使用SMI描述的管理信息库。每一类关心的事件都有一组MIB，比如网络接口有一颗MIB树，TCP有一颗MIB树，UDP也有一颗MIB树。</p></li><li><p>PDU：是SNMP的协议数据单元。PDU是基本的通信格式，使用ASN.1描述，使用BER编码，通过传输层协议传送。</p></li></ul><blockquote><p>SNMP协议更多细节参考 <strong><a href="http://www.faqs.org/rfcs/rfc1157.html" target="_blank" rel="external">RFC文档</a></strong></p></blockquote><h3 id="2-3、SNMP报文格式"><a href="#2-3、SNMP报文格式" class="headerlink" title="2.3、SNMP报文格式"></a>2.3、SNMP报文格式</h3><p>SNMP请求/响应报文</p><p>简单网络管理协议允许网络管理工作站软件与被管理设备中的代理进行通信。这种通信可以包括来自管理工作站的询问消息、来自代理的应答消息或者来自代理给管理工作站的自陷消息。<br>SNMPv1实现起来很简单，其包含5个请求/响应原语：</p><ul><li>get-request</li><li>set-request</li><li>get-next-request</li><li>get-response</li><li>trap</li></ul><p><strong>报文格式</strong>　　</p><p>| IP首部 | UDP首部 | 版本 | 共同体 |  PDU类型（0－3） | 请求标识 |  差错状态（0－5） | 差错索引 | 名称 |  值 | 名称 |  值 |  … |　　</p><p>|  PDU类型4 |  企业 |  代理地址 |  Trap类型（0－6） |  特定代码 |  时间戳 |  名称 |  值 |  … |　　</p><p>|  PDU类型 |  名称 |　　<br>|  0 |  Get-request |　　<br>|  1 |  Get-next-request |　　<br>|  2 |  Get-response |　　<br>|  3 |  Set-request |　　<br>|  4 |  Trap |　　　　　　</p><h2 id="第3章-SNMP-API"><a href="#第3章-SNMP-API" class="headerlink" title="第3章 SNMP API"></a>第3章 SNMP API</h2><h3 id="3-1、SNMP4J-JAVA"><a href="#3-1、SNMP4J-JAVA" class="headerlink" title="3.1、SNMP4J (JAVA)"></a>3.1、SNMP4J (JAVA)</h3><p>　SNMP4J是一个用Java来实现SNMP(简单网络管理协议)协议的开源项目.它支持以命令行的形式进行管理与响应。SNMP4J是纯面向对象设计与SNMP++(用C++实现SNMPv1/v2c/v3)相类似。</p><p>　　SNMP4J API 提供以下下特性：</p><ul><li>支持MD5和SHA验证，DES，3DES,AES128、AES192和AES256加密的SNMPv3。</li><li>支持MPv1,MPv2C和MPv3，带执行的可阻塞的信息处理模块。</li><li>全部PDU格式。</li><li>可阻塞的传输拓扑。支持UPD、TCP、TLS 。</li><li>可阻塞的超时模块。</li><li>同步和异步请求。</li><li>命令发生器以及命令应答器的支持。</li><li>基于Apache license的开源免费。</li><li>JAVA 1.4.1或更高版本(2.0或更高版本需要jdk1.6及以上的支持)。</li><li>基于LOG4J记录日志。</li><li>使用GETBULK实现Row-based的有效的异步表格获取。</li><li><p>支持多线程。</p><p>参考链接：</p></li></ul><ul><li><a href="http://www.agentpp.com/" target="_blank" rel="external">AGENT++ snmp.software - SNMP Tools and Libraries for Developers</a></li><li><a href="http://www.snmp4j.org/" target="_blank" rel="external">SNMP4J - Free Open Source SNMP API for Java</a></li></ul><h3 id="3-2、SNMP-C"><a href="#3-2、SNMP-C" class="headerlink" title="3.2、SNMP++ (C++)"></a>3.2、SNMP++ (C++)</h3><p>SNMP++是一个用C++来实现SNMP(简单网络管理协议)协议的开源项目，支持SNMPv3。</p><ul><li><a href="http://www.agentpp.com/" target="_blank" rel="external">官网:AGENT++ snmp.software - SNMP Tools and Libraries for Developers</a></li></ul><h3 id="3-3、Net-SNMP-Linux"><a href="#3-3、Net-SNMP-Linux" class="headerlink" title="3.3、Net-SNMP (Linux)"></a>3.3、Net-SNMP (Linux)</h3><p>Net-snmp是一个开源的SNMP项目。最新版本为：5.7.2。net-snmp支持snmpv1、snmpv2、snmpv3，支持基于IPv4和IPv6的SNMP应用程序。</p><ul><li><p>Net-snmp提供完整的API用于SNMP应用程序开发，包括C和Perl的API 。</p></li><li><p>一个功能强大且可扩展的SNMP代理：snmpd开发者可以开发动态模块扩展snmpd，net-snmp内置扩展子代理与主代理的通信协议。</p></li><li><p>提供众多命令行工具检查和使用SNMP协议</p></li><li><p>一个图形化的MIB浏览工具</p></li><li><p>一个Trap接收进程，用于接收和显示Trap，并将Trap记录到日志文件中。</p><pre><code>[Net-SNMP的官网](http://www.net-snmp.org/download.html)</code></pre></li></ul><h3 id="3-4、WebNMS-for-Android"><a href="#3-4、WebNMS-for-Android" class="headerlink" title="3.4、WebNMS for Android"></a>3.4、WebNMS for Android</h3><p>直接使用SNMP4J进行Android开发可能会出现问题，WebNMS for Android 具有以下特点：</p><ul><li><strong>Simple</strong>: Add our AdventnetSnmp.jar to your android project and start developing the application.</li><li><strong>Multi-lingual support</strong>: Complete support for SNMPv1, SNMPv2c and SNMPv3.</li><li><strong>SNMPv3 security</strong>: Support for HMAC-SHA-96, HMAC-MD5-96, CBC-DES, CBC-3DES, CFB-AES-128, CFB-AES-192, CFB-AES-256 bit encryption.</li><li><strong>MIB Loading</strong>: Option to load MIB definitions from a pre-compiled file or a Serialized file to boost the performance.</li><li><strong>IPv6 (Internet Protocol Version 6) support</strong>: Provides connectivity with IPv6 and IPv4 based devices.</li><li><strong>SNMP Broadcasting</strong>: Broadcasts snmp packets across the network to auto-discover snmp devices in the network.</li><li><strong>a lightweight Java library </strong>:provides off-the-shelf components for trap and table handling along with basic SNMP operations, such as SNMP GET, SNMP GETNEXT, SNMP GETBULK, and SNMP SET.</li></ul><ul><li><a href="https://www.webnms.com/snmpapi-android/index.html" target="_blank" rel="external">官网:WebNMS SNMP API Android Edition - Java SNMP API/ SNMP Stack/ SNMP Library for Android Platform</a></li></ul><h3 id="3-5、SnmpSharpNet"><a href="#3-5、SnmpSharpNet" class="headerlink" title="3.5、SnmpSharpNet"></a>3.5、SnmpSharpNet</h3><ul><li>SNMP Library for C#</li><li><a href="http://www.snmpsharpnet.com/" target="_blank" rel="external">参考 SnmpSharpNet | SNMP Library for C#</a></li></ul><h3 id="3-6、pySNMP"><a href="#3-6、pySNMP" class="headerlink" title="3.6、pySNMP"></a>3.6、pySNMP</h3><p>pySNMP 是纯 Python 实现的 SNMP v1/v2c/v3</p><ul><li>Complete SNMPv1/v2c and SNMPv3 engine support</li><li>Can act Manager and/or Agent role</li><li>Manager and Agent side MIB support</li><li>Asynchronous operations support</li><li>Pure-Python implementation</li><li>Runs on Python 2.4 through 3.2</li><li>py2exe and .egg friendly</li><li>Twisted binding</li><li><a href="https://sourceforge.net/projects/pysnmp/" target="_blank" rel="external">参考SNMP library for Python download | SourceForge.net</a></li></ul><h3 id="3-7、SNMP-Agent-相关开发库"><a href="#3-7、SNMP-Agent-相关开发库" class="headerlink" title="3.7、SNMP Agent 相关开发库"></a>3.7、SNMP Agent 相关开发库</h3><h4 id="3-7-1、Agent"><a href="#3-7-1、Agent" class="headerlink" title="3.7.1、Agent++"></a>3.7.1、Agent++</h4><ul><li>基于SNMP++实现的一个C++框架，用于SNMP代理的开发。</li><li>AGENT++ 支持 Linux, Solaris, HPUX, AIX, and Windows XP, 7, and 8 (VS 2010-2015)，需要 SNMP++ version 3.x 及以上. 由于AGENT++ 是 ANSI C++ 兼容的, 理论上也可以运行在其他平台包括嵌入式系统。</li><li><a href="http://www.agentpp.com/api/cpp/agent_pp.html" target="_blank" rel="external">参考AGENT++ API</a></li></ul><h4 id="3-7-2、AgentX"><a href="#3-7-2、AgentX" class="headerlink" title="3.7.2、AgentX++"></a>3.7.2、AgentX++</h4><p>  AgentX协议允许独立自治的sub-agent设备与网关上的master agent设备进行通信。</p><ul><li>AgentX++ 在Agent++的基础上实现了完整的AgentX协议支持。<br> <img src="http://ww1.sinaimg.cn/large/af9df239gw1f5nxolc7xmj209f06zq32.jpg" alt=""></li><li>支持平台：Linux, Mac OS X, Solaris, cygwin, and Windows XP/7/8 (only TCP).</li><li><a href="http://www.agentpp.com/api/cpp/agentx_pp.html" target="_blank" rel="external">参考：AgentX++ API</a></li></ul><h4 id="3-7-3、SmartSNMP-agent"><a href="#3-7-3、SmartSNMP-agent" class="headerlink" title="3.7.3、SmartSNMP agent"></a>3.7.3、SmartSNMP agent</h4><ul><li><p>SmartSNMP是一个小巧的、易配置的网络管理代理，支持SNMPv1/v2c/v3以及AgentX协议。它使用C99和Lua5.1写成。支持PC平台包括Linux和BSD，嵌入式平台如OpenWRT。</p></li><li><p>支持SNMPv1/v2c/v3，使用Lua写私有mib</p></li><li><p><a href="http://www.fullstackengineer.net/zh/project/smartsnmp-zh" target="_blank" rel="external">参考：FSEN :: SmartSNMP</a></p></li><li>SmithSNMP –SmartSNMP的独立分支版本，项目地址：<a href="https://github.com/begeekmyfriend/smithsnmp" target="_blank" rel="external">github</a></li></ul><h2 id="第4章-Net-SNMP编译与开发"><a href="#第4章-Net-SNMP编译与开发" class="headerlink" title="第4章 Net-SNMP编译与开发"></a>第4章 Net-SNMP编译与开发</h2><p>实验环境: linux-debian 8,net-SNMP 5.3</p><h3 id="4-1、搭建SNMP服务环境"><a href="#4-1、搭建SNMP服务环境" class="headerlink" title="4.1、搭建SNMP服务环境"></a>4.1、搭建SNMP服务环境</h3><ul><li>安装snmp</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install snmp snmpd</div></pre></td></tr></table></figure><ul><li>安装mib库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install snmp-mibs-downloader</div></pre></td></tr></table></figure><p><a href="https://wiki.debian.org/SNMP" target="_blank" rel="external">参考debian-wiki-snmp</a></p><ul><li>查看默认配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cat /etc/snmp/snmpd.conf </div><div class="line">cat /etc/snmp/snmp.conf</div></pre></td></tr></table></figure><ul><li><p>启动SNMP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># service snmpd start</div><div class="line"># snmpd -C -c /etc/snmp/myconfig.conf  ###-C不适用默认配置文件 -c指定自定义配置文件</div></pre></td></tr></table></figure></li></ul><h3 id="4-2、编译、安装Net-SNMP"><a href="#4-2、编译、安装Net-SNMP" class="headerlink" title="4.2、编译、安装Net-SNMP"></a>4.2、编译、安装Net-SNMP</h3><ul><li><a href="http://www.net-snmp.org/download.html" target="_blank" rel="external">源码下载地址</a></li><li>编译</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">  解压源码:# tar -zxvf net-snmp-5.7.3.tar.gz </div><div class="line">查看编译配置: ./configure --help</div><div class="line">开始编译： ./configure </div><div class="line">      make</div><div class="line">  make install</div></pre></td></tr></table></figure><p>如果编译报错lperl，使用 <code>apt-get install libperl-dev</code></p><ul><li>net-snmp提供的命令工具</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">root@kali:~<span class="comment"># snmp</span></div><div class="line">snmp-bridge-mib  snmp-check       snmpget          snmpset          snmptrap</div><div class="line">snmpbulkget      snmpconf         snmpgetnext      snmpstatus       snmptrapd</div><div class="line">snmpbulkwalk     snmpd            snmpinform       snmptable        snmpusm</div><div class="line">snmpc            snmpdelta        snmpkey          snmptest         snmpvacm</div><div class="line">snmpcheck        snmpdf           snmpnetstat      snmptranslate    snmpwalk</div></pre></td></tr></table></figure><ul><li><p>snmpget 模拟snmp的GetRequest操作的工具。用来获取一个或几个管理信息。用来读取管理信息的内容。</p></li><li><p>snmpgetnext 模拟snmp的GetNextRequest操作的工具。用来获取一个管理信息实例的下一个可用实例数据。一般用来遍历SNMP中的表格数据。</p></li><li><p>snmpset 模拟snmp的SetRequest操作的工具。用来设置可以写的管理信息。一般用来配置设备或对设备执行操作。</p></li><li><p>snmpbulkget 模拟snmp的GetBulkRequest操作的工具。用来获取大块的数据。一般在大量读取大块数据时使用，以提高带宽利用率，并且比使用snmpget、snmpgetnext及snmpwalk有更强的容错能力，代理会返回尽可能多的数据，比其它命令更有保证。</p></li><li><p>snmpwalk 利用GetNextRequest对给定的管理树进行遍历的工具。一般用来对表格类型管理信息进行遍历。</p></li><li><p>snmptrap 模拟trap的工具。用来发送模拟trap。一般用来测试管理站安装和配置是否正确，或者用来验证开发的Trap接收程序是否可以正常工作。</p></li><li><p>snmptrapd 接收并显示trap的工具。一般在代理的开发过程中，接收代理发来的Trap，并将PDU细节打印出来，也来测试Trap发送功能是否正常。</p></li><li><p>snmpinform 模拟发送InformRequest的工具。跟snmptrap类似，用来发送模拟的带应答的Trap，以测试管理站或自己开发的接收程序。</p></li><li><p>snmptable 使用GetNextRequest 和 GetBulkRequest操作读取表信息，以列表形式显示的工具。</p></li><li><p>snmpstatus 从SNMP实体读取几个重要的管理信息以确定设备状态的工具。用来简单测定设备状态。</p></li><li><p>snmpbulkwalk 利用GetBulkRequest实现对给定管理树进行遍历的工具。对表格类型的管理信息进行遍历读取。</p></li><li><p>snmpdelta 用来监视Integer类型的管理对象，会及时报告值改变情况的工具。用于监测一个设备或开发中的代理。</p></li><li><p>snmptest 是一个复杂的工具，可以监测和管理一个网络实体的信息，通过SNMP请求操作与管理实体通信。</p></li><li><p>snmptranslate 将对象名字和标识符相互转换的工具。用于数据格式的对象标识和可读式字符串的数据名称的转换。类似于域名与IP地址的关系。</p></li><li><p>snmpusm SNMPv3 USM配置工具。用于SNMPv3的用户管理。</p></li><li><p>snmpvacm 为一个网络实体创建和维护SNMPv3的基于视图访问控制参数的工具。用于维护SNMPv3的视图访问控制。</p></li><li><p>snmpconf 生成snmpd配置文件的工具。用于生成snmpd的各种配置文件，用作模板，以生成用户级配置文件。</p></li><li><p>snmpd Net-snmp开发的主代理程序，包括众多标准MIB的实现。还可以使用子代理对其进行扩展，是一个功能强大的SNMP代理。Linux、Unix和Windows系统运行snmpd后，直接具备了SNMP协议支持，可以被管理站管理。许多商业化的Linux中使用snmpd作为系统的SNMP代理。</p></li><li><p>snmpdf 通过SNMP访问并显示网络实体磁盘利用情况的工具。用来监测网络实体的磁盘。</p></li></ul><h3 id="4-3、测试与使用net-snmp"><a href="#4-3、测试与使用net-snmp" class="headerlink" title="4.3、测试与使用net-snmp"></a>4.3、测试与使用net-snmp</h3><ul><li><p>测试：<br>首先在<code>snmp.conf</code>中注释掉默认的mibs。<br>测试net-snmp是否安装成功,从代理中读取一个管理对象验证代理是否正常运行。读取MIB库中的RFC1213-&gt;system-&gt;sysDescr 对象，该对象表示设备的描述信息。使用net-snmp提供的snmp工具读取，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@kali:/mnt/hgfs/VMshare# snmpget -v 2c -c public localhost sysDescr.0</div><div class="line">SNMPv2-MIB::sysDescr.0 = STRING: Linux kali 4.3.0-kali1-amd64 #1 SMP Debian 4.3.3-7kali2 (2016-01-27) x86_64</div></pre></td></tr></table></figure><p>得到了系统详细信息，说明net-snmp安装成功。</p><blockquote><p>ps. 如果出现如下错误： <code>sysDescr: Unknown Object Identifier (Sub-id not found: (top) -&gt; sysDescr)</code> 这个是因为你缺少snmp所需的mib库，如下安装使用安装最新的mibs库 <code># sudo sudo apt-get install snmp-mibs-downloader</code> 然后再测试，你还有可能会出错，那是因为snmp配置的mibs不是想要的，你只需要如下操作<code># sudo &gt; /etc/snmp/snmp.conf</code>把snmp文件清空，或注释掉mibs那行！</p></blockquote></li><li><p>net-SNMP用例</p><ul><li><p>查询到主机CPU空闲率为99%</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@kali:/etc/snmp# snmpwalk -v 2c -c public localhost 1.3.6.1.4.1.2021.11.11.0</div><div class="line">UCD-SNMP-MIB::ssCpuIdle.0 = INTEGER: 99</div></pre></td></tr></table></figure></li></ul></li><li><p>详细命令</p><ul><li>(1).snmpget命令</li></ul><blockquote><p>snmpget [OPTIONS] AGENT OID [OID]…<br>选项：<br>-v 1|2c|3  指定SNMP版本<br>-c COMMUNITY  指定community string<br>-m MIB[:…]  指定MIB文件</p></blockquote><p>snmpget 不同于 snmpwalk ，必须在命令行给出 <object>.<instance> 的格式，不能只给出 object。<br>案例，snmpget -v 2c -c public localhost system.sysDescr.0 #获取设备的描述信息。</instance></object></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpget -v 2c -c public localhost system.sysDescr.0</div><div class="line">SNMPv2-MIB::sysDescr.0 = STRING: Linux kali 4.3.0-kali1-amd64 #1 SMP Debian 4.3.3-7kali2 (2016-01-27) x86_64</div></pre></td></tr></table></figure><ul><li>(2).snmpwalk/snmpbulkwalk 命令</li></ul><blockquote><p>snmpwalk/snmpbulkwalk [OPTIONS] AGENT [OID]<br>选项：<br>-v 1|2c|3  指定SNMP版本<br>-c COMMUNITY  指定community string<br>-m MIB[:…]  指定MIB文件<br>snmpbulkwalk命令： 获取snmp服务器的mib-2各种资讯，snmpbulkwalk用于通过SNMPv2 的SNMP GET BULK请求命令与其它网络实体通信，只能用于snmpv2,速度快于snmpwalk<br>案例，snmpbulkwalk -v 2c -c public 127.0.0.1 .1.3.6.1.2.1.1 #获取mib-2的system的数据。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpbulkwalk -v 2c -c public 127.0.0.1 .1.3.6.1.2.1.1</div><div class="line">SNMPv2-MIB::sysDescr.0 = STRING: Linux kali 4.3.0-kali1-amd64 #1 SMP Debian 4.3.3-7kali2 (2016-01-27) x86_64</div><div class="line">SNMPv2-MIB::sysObjectID.0 = OID: NET-SNMP-MIB::netSnmpAgentOIDs.10</div><div class="line">DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (5833280) 16:12:12.80</div><div class="line">SNMPv2-MIB::sysContact.0 = STRING: Me &lt;me@example.org&gt;</div><div class="line">SNMPv2-MIB::sysName.0 = STRING: kali</div><div class="line">SNMPv2-MIB::sysLocation.0 = STRING: Sitting on the Dock of the Bay</div><div class="line">SNMPv2-MIB::sysServices.0 = INTEGER: 72</div><div class="line">SNMPv2-MIB::sysORLastChange.0 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORID.1 = OID: SNMP-MPD-MIB::snmpMPDCompliance</div><div class="line">SNMPv2-MIB::sysORID.2 = OID: SNMP-USER-BASED-SM-MIB::usmMIBCompliance</div><div class="line">SNMPv2-MIB::sysORID.3 = OID: SNMP-FRAMEWORK-MIB::snmpFrameworkMIBCompliance</div><div class="line">SNMPv2-MIB::sysORID.4 = OID: SNMPv2-MIB::snmpMIB</div><div class="line">SNMPv2-MIB::sysORID.5 = OID: SNMP-VIEW-BASED-ACM-MIB::vacmBasicGroup</div><div class="line">SNMPv2-MIB::sysORID.6 = OID: TCP-MIB::tcpMIB</div><div class="line">SNMPv2-MIB::sysORID.7 = OID: IP-MIB::ip</div><div class="line">SNMPv2-MIB::sysORID.8 = OID: UDP-MIB::udpMIB</div><div class="line">SNMPv2-MIB::sysORID.9 = OID: SNMP-NOTIFICATION-MIB::snmpNotifyFullCompliance</div><div class="line">SNMPv2-MIB::sysORID.10 = OID: NOTIFICATION-LOG-MIB::notificationLogMIB</div><div class="line">SNMPv2-MIB::sysORDescr.1 = STRING: The MIB for Message Processing and Dispatching.</div><div class="line">SNMPv2-MIB::sysORDescr.2 = STRING: The management information definitions for the SNMP User-based Security Model.</div><div class="line">SNMPv2-MIB::sysORDescr.3 = STRING: The SNMP Management Architecture MIB.</div><div class="line">SNMPv2-MIB::sysORDescr.4 = STRING: The MIB module for SNMPv2 entities</div><div class="line">SNMPv2-MIB::sysORDescr.5 = STRING: View-based Access Control Model for SNMP.</div><div class="line">SNMPv2-MIB::sysORDescr.6 = STRING: The MIB module for managing TCP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.7 = STRING: The MIB module for managing IP and ICMP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.8 = STRING: The MIB module for managing UDP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.9 = STRING: The MIB modules for managing SNMP Notification, plus filtering.</div><div class="line">SNMPv2-MIB::sysORDescr.10 = STRING: The MIB module for logging SNMP Notifications.</div><div class="line">SNMPv2-MIB::sysORUpTime.1 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.2 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.3 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.4 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.5 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.6 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.7 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.8 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.9 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.10 = Timeticks: (1) 0:00:00.01</div></pre></td></tr></table></figure><ul><li>(3).snmpwalk命令<br>获取snmp服务器的HOST-RESOURCES的各种资讯。<br>案例，snmpwalk -v 2c -c public localhost system #这条指令用于查看本机系统信息。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpwalk -v 2c -c public localhost system </div><div class="line">SNMPv2-MIB::sysDescr.0 = STRING: Linux kali 4.3.0-kali1-amd64 #1 SMP Debian 4.3.3-7kali2 (2016-01-27) x86_64</div><div class="line">SNMPv2-MIB::sysObjectID.0 = OID: NET-SNMP-MIB::netSnmpAgentOIDs.10</div><div class="line">DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (5844056) 16:14:00.56</div><div class="line">SNMPv2-MIB::sysContact.0 = STRING: Me &lt;me@example.org&gt;</div><div class="line">SNMPv2-MIB::sysName.0 = STRING: kali</div><div class="line">SNMPv2-MIB::sysLocation.0 = STRING: Sitting on the Dock of the Bay</div><div class="line">SNMPv2-MIB::sysServices.0 = INTEGER: 72</div><div class="line">SNMPv2-MIB::sysORLastChange.0 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORID.1 = OID: SNMP-MPD-MIB::snmpMPDCompliance</div><div class="line">SNMPv2-MIB::sysORID.2 = OID: SNMP-USER-BASED-SM-MIB::usmMIBCompliance</div><div class="line">SNMPv2-MIB::sysORID.3 = OID: SNMP-FRAMEWORK-MIB::snmpFrameworkMIBCompliance</div><div class="line">SNMPv2-MIB::sysORID.4 = OID: SNMPv2-MIB::snmpMIB</div><div class="line">SNMPv2-MIB::sysORID.5 = OID: SNMP-VIEW-BASED-ACM-MIB::vacmBasicGroup</div><div class="line">SNMPv2-MIB::sysORID.6 = OID: TCP-MIB::tcpMIB</div><div class="line">SNMPv2-MIB::sysORID.7 = OID: IP-MIB::ip</div><div class="line">SNMPv2-MIB::sysORID.8 = OID: UDP-MIB::udpMIB</div><div class="line">SNMPv2-MIB::sysORID.9 = OID: SNMP-NOTIFICATION-MIB::snmpNotifyFullCompliance</div><div class="line">SNMPv2-MIB::sysORID.10 = OID: NOTIFICATION-LOG-MIB::notificationLogMIB</div><div class="line">SNMPv2-MIB::sysORDescr.1 = STRING: The MIB for Message Processing and Dispatching.</div><div class="line">SNMPv2-MIB::sysORDescr.2 = STRING: The management information definitions for the SNMP User-based Security Model.</div><div class="line">SNMPv2-MIB::sysORDescr.3 = STRING: The SNMP Management Architecture MIB.</div><div class="line">SNMPv2-MIB::sysORDescr.4 = STRING: The MIB module for SNMPv2 entities</div><div class="line">SNMPv2-MIB::sysORDescr.5 = STRING: View-based Access Control Model for SNMP.</div><div class="line">SNMPv2-MIB::sysORDescr.6 = STRING: The MIB module for managing TCP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.7 = STRING: The MIB module for managing IP and ICMP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.8 = STRING: The MIB module for managing UDP implementations</div><div class="line">SNMPv2-MIB::sysORDescr.9 = STRING: The MIB modules for managing SNMP Notification, plus filtering.</div><div class="line">SNMPv2-MIB::sysORDescr.10 = STRING: The MIB module for logging SNMP Notifications.</div><div class="line">SNMPv2-MIB::sysORUpTime.1 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.2 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.3 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.4 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.5 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.6 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.7 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.8 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.9 = Timeticks: (1) 0:00:00.01</div><div class="line">SNMPv2-MIB::sysORUpTime.10 = Timeticks: (1) 0:00:00.01</div></pre></td></tr></table></figure><ul><li>(4).snmpdelta命令<br>监控网卡流量等信息， 指定共同体为public，协议为snmpv1，以表格的方式输出结果,显示时间戳。<br>下面是实时监控第一块网卡的流量，#监控IF-MIB::ifInUcastPkts(输入流量)，IF-MIB::ifOutUcastPkts(输出流量)，如监控本地的第二块网卡instance为2：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpdelta -c public -v 1 -Cs -CT 127.0.0.1 IF-MIB::ifInUcastPkts.2 IF-MIB::ifOutUcastPkts.1</div><div class="line">127.0.0.1IF-MIB::ifInUcastPkts.2IF-MIB::ifOutUcastPkts.1</div><div class="line">[08:23:16 7/13]5.002.00</div><div class="line">[08:23:17 7/13]0.000.00</div><div class="line">[08:23:18 7/13]0.000.00</div><div class="line">[08:23:19 7/13]3.006.00</div><div class="line">[08:23:20 7/13]0.000.00</div><div class="line">[08:23:21 7/13]0.000.00</div><div class="line">[08:23:22 7/13]3.006.00</div><div class="line">^C</div></pre></td></tr></table></figure><p>监控网卡丢包情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpdelta -c public -v 1 -Cs -CT 127.0.0.1 ifInDiscards.1</div><div class="line">127.0.0.1IF-MIB::ifInDiscards.1</div><div class="line">[08:34:16 7/13]0.00</div><div class="line">[08:34:17 7/13]0.00</div><div class="line">[08:34:18 7/13]0.00</div><div class="line">[08:34:19 7/13]0.00</div><div class="line">[08:34:20 7/13]0.00</div><div class="line">[08:34:21 7/13]0.00</div><div class="line">[08:34:22 7/13]0.00</div><div class="line">[08:34:23 7/13]0.00</div><div class="line">[08:34:24 7/13]0.00</div><div class="line">^C</div></pre></td></tr></table></figure><ul><li>(5).snmpnetstat命令<br>查看snmp服务器的端口连接信息， 协议为snmp 2c。<br>案例，</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmpnetstat -v 2c -c public -Can -Cp tcp 127.0.0.1 </div><div class="line">Active Internet (tcp) Connections</div><div class="line">Proto Local Address               Remote Address                    State   PID</div><div class="line">tcp4  192.168.233.128.22          192.168.233.1.64939         ESTABLISHED     0</div><div class="line">Listening Internet (tcp) Connections</div><div class="line">Proto Local Address                 PID</div><div class="line">tcp4  *.22                            0</div><div class="line">tcp6  [[XXX - inet6 addr.22           0</div></pre></td></tr></table></figure><ul><li>(6).snmptranslate 命令<ul><li>在MIB OID 在数字和文字名称之间进行转换。<br>示例：snmptranslate -On -IR HOST-RESOURCES-MIB::hrSystem #用snmptranslate把symbol 格式的HOST-RESOURCES-MIB::hrSystem 转换为 numberic 格式的oid,用-On(输出数字格式的oid),使用 -IR(允许“随机”访问 MIB)</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmptranslate -On -IR HOST-RESOURCES-MIB::hrSystem</div><div class="line">.1.3.6.1.2.1.25.1</div></pre></td></tr></table></figure><ul><li>snmptranslate -Onf -IR HOST-RESOURCES-MIB::hrSystem #用snmptranslate把symbol 格式的HOST-RESOURCES-MIB::hrSystem 转换为symbol 格式的 oid,用-Onf(输出符号格式的oid)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@kali:~# snmptranslate -Onf -IR HOST-RESOURCES-MIB::hrSystem</div><div class="line">.iso.org.dod.internet.mgmt.mib-2.host.hrSystem</div></pre></td></tr></table></figure><ul><li><p>snmptranslate -Tp iso.org.dod.internet.mgmt.mib-2 #用snmptranslate打印从指定OID(.1.3.6.1.2.1)开始一直到该OID(.1.3.6.1.2.1)所属的 MIB 子树末端的树型结构信息</p></li><li><p>snmptranslate -Ta #用snmptranslate导出所有已经加载的 MIB 的数据，每个对象一行</p></li><li><p>snmptranslate -Tl #用snmptranslate导出所有已经加载的 MIB 的对象，并且输出完整的 oid 路径</p></li><li><p>snmptranslate -To #用snmptranslate导出已经加载的所有 MIB 的数字格式的 oid ，不含值和类型，仅仅有 oid 而已</p></li><li><p>snmptranslate -Ts #用snmptranslate只输出文字格式的 OID 名称而已</p></li></ul></li></ul><h3 id="4-4、修改SNMP配置文件"><a href="#4-4、修改SNMP配置文件" class="headerlink" title="4.4、修改SNMP配置文件"></a>4.4、修改SNMP配置文件</h3><ul><li>example.conf模板<br>将net-snmp源码中的example.conf复制到/etc/snmp/ 目录下，并改名为snmpd.conf，先备份原有的snmpd.conf文件 </li><li><p>配置允许网络访问<br>　找到【AGENT BEHAVIOUR】，注释掉<code>agentAddress udp:127.0.0.1：161</code>,添加一行<code>agentAddress udp:161</code>。</p></li><li><p>选择SNMPv2C协议版本</p></li></ul><p>　　找到【ACTIVE MONITORING】，注释掉<code>trapsink     localhost public</code>，添加<code>trap2sink     localhost public</code></p><ul><li>设置访问权限</li></ul><p>　　找到【ACCESS CONTROL】,注释掉<code>rocommunity public  default    -V systemonly</code>，添加<code>rocommunity public  default</code>,允许所有访问请求。</p><ul><li>开启防火墙 UDP161端口<br>查看防火墙配置：<code>iptables –L –n</code>,添加一条规则记录：<code>iptables -I INPUT -p udp --dport 161 -j ACCEPT</code>，保存规则使防火墙生效<code>iptables-save</code>(debian linux),ubuntu下的保存iptables命令<code>iptables -save</code>。</li><li>在Windows下访问MIBs<br>使用工具snmpB，输入远程主机的ip地址，使用如下：<br><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5rarqsb91j20qz0il76i.jpg" alt="snmpB用法"> <pre><code>图：查看Memory大小</code></pre><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5rarx8vs3j21020gb40w.jpg" alt="snmpB用法"><pre><code>图：查看系统版本详情</code></pre></li></ul><h3 id="4-5、常用的SNMP-监控-OID"><a href="#4-5、常用的SNMP-监控-OID" class="headerlink" title="4.5、常用的SNMP 监控 OID"></a>4.5、常用的SNMP 监控 OID</h3><ul><li>系统信息<pre><code>![系统信息](http://ww2.sinaimg.cn/large/af9df239jw1f5si8iqsrmj20h60cyaba.jpg)</code></pre></li><li>网络接口<pre><code>![网络接口](http://ww3.sinaimg.cn/large/af9df239jw1f5sid6wbk4j20d70ed75i.jpg)</code></pre><ul><li>CPU及负载<br><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5siez19moj20dg0gf3zo.jpg" alt="CPU及负载"></li><li>内存及磁盘<br><img src="http://ww1.sinaimg.cn/large/af9df239gw1f5sifd7v5tj20d20gggn4.jpg" alt="内存及磁盘"></li><li>System Group<br>sysDescr 1.3.6.1.2.1.1.1<br>sysObjectID 1.3.6.1.2.1.1.2<br>sysUpTime 1.3.6.1.2.1.1.3<br>sysContact 1.3.6.1.2.1.1.4<br>sysName 1.3.6.1.2.1.1.5<br>sysLocation 1.3.6.1.2.1.1.6<br>sysServices 1.3.6.1.2.1.1.7</li><li>Interfaces Group<br>ifNumber 1.3.6.1.2.1.2.1<br>ifTable 1.3.6.1.2.1.2.2<br>ifEntry 1.3.6.1.2.1.2.2.1<br>ifIndex 1.3.6.1.2.1.2.2.1.1<br>ifDescr 1.3.6.1.2.1.2.2.1.2<br>ifType 1.3.6.1.2.1.2.2.1.3<br>ifMtu 1.3.6.1.2.1.2.2.1.4<br>ifSpeed 1.3.6.1.2.1.2.2.1.5<br>ifPhysAddress 1.3.6.1.2.1.2.2.1.6<br>ifAdminStatus 1.3.6.1.2.1.2.2.1.7<br>ifOperStatus 1.3.6.1.2.1.2.2.1.8<br>ifLastChange 1.3.6.1.2.1.2.2.1.9<br>ifInOctets 1.3.6.1.2.1.2.2.1.10<br>ifInUcastPkts 1.3.6.1.2.1.2.2.1.11<br>ifInNUcastPkts 1.3.6.1.2.1.2.2.1.12<br>ifInDiscards 1.3.6.1.2.1.2.2.1.13<br>ifInErrors 1.3.6.1.2.1.2.2.1.14<br>ifInUnknownProtos 1.3.6.1.2.1.2.2.1.15<br>ifOutOctets 1.3.6.1.2.1.2.2.1.16<br>ifOutUcastPkts 1.3.6.1.2.1.2.2.1.17<br>ifOutNUcastPkts 1.3.6.1.2.1.2.2.1.18<br>ifOutDiscards 1.3.6.1.2.1.2.2.1.19<br>ifOutErrors 1.3.6.1.2.1.2.2.1.20<br>ifOutQLen 1.3.6.1.2.1.2.2.1.21<br>ifSpecific 1.3.6.1.2.1.2.2.1.22</li><li>IP Group<br>ipForwarding 1.3.6.1.2.1.4.1<br>ipDefaultTTL 1.3.6.1.2.1.4.2<br>ipInReceives 1.3.6.1.2.1.4.3<br>ipInHdrErrors 1.3.6.1.2.1.4.4<br>ipInAddrErrors 1.3.6.1.2.1.4.5<br>ipForwDatagrams 1.3.6.1.2.1.4.6<br>ipInUnknownProtos 1.3.6.1.2.1.4.7<br>ipInDiscards 1.3.6.1.2.1.4.8<br>ipInDelivers 1.3.6.1.2.1.4.9<br>ipOutRequests 1.3.6.1.2.1.4.10<br>ipOutDiscards 1.3.6.1.2.1.4.11<br>ipOutNoRoutes 1.3.6.1.2.1.4.12<br>ipReasmTimeout 1.3.6.1.2.1.4.13<br>ipReasmReqds 1.3.6.1.2.1.4.14<br>ipReasmOKs 1.3.6.1.2.1.4.15<br>ipReasmFails 1.3.6.1.2.1.4.16<br>ipFragsOKs 1.3.6.1.2.1.4.17<br>ipFragsFails 1.3.6.1.2.1.4.18<br>ipFragCreates 1.3.6.1.2.1.4.19<br>ipAddrTable 1.3.6.1.2.1.4.20<br>ipAddrEntry 1.3.6.1.2.1.4.20.1<br>ipAdEntAddr 1.3.6.1.2.1.4.20.1.1<br>ipAdEntIfIndex 1.3.6.1.2.1.4.20.1.2<br>ipAdEntNetMask 1.3.6.1.2.1.4.20.1.3<br>ipAdEntBcastAddr 1.3.6.1.2.1.4.20.1.4<br>ipAdEntReasmMaxSize 1.3.6.1.2.1.4.20.1.5</li><li>ICMP Group<br>icmpInMsgs 1.3.6.1.2.1.5.1<br>icmpInErrors 1.3.6.1.2.1.5.2<br>icmpInDestUnreachs 1.3.6.1.2.1.5.3<br>icmpInTimeExcds 1.3.6.1.2.1.5.4<br>icmpInParmProbs 1.3.6.1.2.1.5.5<br>icmpInSrcQuenchs 1.3.6.1.2.1.5.6<br>icmpInRedirects 1.3.6.1.2.1.5.7<br>icmpInEchos 1.3.6.1.2.1.5.8<br>icmpInEchoReps 1.3.6.1.2.1.5.9<br>icmpInTimestamps 1.3.6.1.2.1.5.10<br>icmpInTimestampReps 1.3.6.1.2.1.5.11<br>icmpInAddrMasks 1.3.6.1.2.1.5.12<br>icmpInAddrMaskReps 1.3.6.1.2.1.5.13<br>icmpOutMsgs 1.3.6.1.2.1.5.14<br>icmpOutErrors 1.3.6.1.2.1.5.15<br>icmpOutDestUnreachs 1.3.6.1.2.1.5.16<br>icmpOutTimeExcds 1.3.6.1.2.1.5.17<br>icmpOutParmProbs 1.3.6.1.2.1.5.18<br>icmpOutSrcQuenchs 1.3.6.1.2.1.5.19<br>icmpOutRedirects 1.3.6.1.2.1.5.20<br>icmpOutEchos 1.3.6.1.2.1.5.21<br>icmpOutEchoReps 1.3.6.1.2.1.5.22<br>icmpOutTimestamps 1.3.6.1.2.1.5.23<br>icmpOutTimestampReps 1.3.6.1.2.1.5.24<br>icmpOutAddrMasks 1.3.6.1.2.1.5.25<br>icmpOutAddrMaskReps 1.3.6.1.2.1.5.26</li><li>TCP Group<br>tcpRtoAlgorithm 1.3.6.1.2.1.6.1<br>tcpRtoMin 1.3.6.1.2.1.6.2<br>tcpRtoMax 1.3.6.1.2.1.6.3<br>tcpMaxConn 1.3.6.1.2.1.6.4<br>tcpActiveOpens 1.3.6.1.2.1.6.5<br>tcpPassiveOpens 1.3.6.1.2.1.6.6<br>tcpAttemptFails 1.3.6.1.2.1.6.7<br>tcpEstabResets 1.3.6.1.2.1.6.8<br>tcpCurrEstab 1.3.6.1.2.1.6.9<br>tcpInSegs 1.3.6.1.2.1.6.10<br>tcpOutSegs 1.3.6.1.2.1.6.11<br>tcpRetransSegs 1.3.6.1.2.1.6.12<br>tcpConnTable 1.3.6.1.2.1.6.13<br>tcpConnEntry 1.3.6.1.2.1.6.13.1<br>tcpConnState 1.3.6.1.2.1.6.13.1.1<br>tcpConnLocalAddress 1.3.6.1.2.1.6.13.1.2<br>tcpConnLocalPort 1.3.6.1.2.1.6.13.1.3<br>tcpConnRemAddress 1.3.6.1.2.1.6.13.1.4<br>tcpConnRemPort 1.3.6.1.2.1.6.13.1.5<br>tcpInErrs 1.3.6.1.2.1.6.14<br>tcpOutRsts 1.3.6.1.2.1.6.15</li><li>UDP Group<br>udpInDatagrams 1.3.6.1.2.1.7.1<br>udpNoPorts 1.3.6.1.2.1.7.2<br>udpInErrors 1.3.6.1.2.1.7.3<br>udpOutDatagrams 1.3.6.1.2.1.7.4<br>udpTable 1.3.6.1.2.1.7.5<br>udpEntry 1.3.6.1.2.1.7.5.1<br>udpLocalAddress 1.3.6.1.2.1.7.5.1.1<br>udpLocalPort 1.3.6.1.2.1.7.5.1.2</li><li>SNMP Group<br>snmpInPkts 1.3.6.1.2.1.11.1<br>snmpOutPkts 1.3.6.1.2.1.11.2<br>snmpInBadVersions 1.3.6.1.2.1.11.3<br>snmpInBadCommunityNames 1.3.6.1.2.1.11.4<br>snmpInBadCommunityUses 1.3.6.1.2.1.11.5<br>snmpInASNParseErrs 1.3.6.1.2.1.11.6<br>NOT USED 1.3.6.1.2.1.11.7<br>snmpInTooBigs 1.3.6.1.2.1.11.8<br>snmpInNoSuchNames 1.3.6.1.2.1.11.9<br>snmpInBadValues 1.3.6.1.2.1.11.10<br>snmpInReadOnlys 1.3.6.1.2.1.11.11<br>snmpInGenErrs 1.3.6.1.2.1.11.12<br>snmpInTotalReqVars 1.3.6.1.2.1.11.13<br>snmpInTotalSetVars 1.3.6.1.2.1.11.14<br>snmpInGetRequests 1.3.6.1.2.1.11.15<br>snmpInGetNexts 1.3.6.1.2.1.11.16<br>snmpInSetRequests 1.3.6.1.2.1.11.17<br>snmpInGetResponses 1.3.6.1.2.1.11.18<br>snmpInTraps 1.3.6.1.2.1.11.19<br>snmpOutTooBigs 1.3.6.1.2.1.11.20<br>snmpOutNoSuchNames 1.3.6.1.2.1.11.21<br>snmpOutBadValues 1.3.6.1.2.1.11.22<br>NOT USED 1.3.6.1.2.1.11.23<br>snmpOutGenErrs 1.3.6.1.2.1.11.24<br>snmpOutGetRequests 1.3.6.1.2.1.11.25<br>snmpOutGetNexts 1.3.6.1.2.1.11.26<br>snmpOutSetRequests 1.3.6.1.2.1.11.27<br>snmpOutGetResponses 1.3.6.1.2.1.11.28<br>snmpOutTraps 1.3.6.1.2.1.11.29<br>snmpEnableAuthenTraps 1.3.6.1.2.1.11.30 </li></ul></li></ul><h2 id="第5章、开源网络管理系统-NMS"><a href="#第5章、开源网络管理系统-NMS" class="headerlink" title="第5章、开源网络管理系统(NMS)"></a>第5章、开源网络管理系统(NMS)</h2><blockquote><p>目前已有上百种开源网络管理软件系统，支持SNMP，及WMI、SMTP、ssh等通用型协议，可以提供管理、性能监控以及报警，分析报告等功能。本章主要分析4款人气高，社区活跃的开源NMS：<br>Zenoss core、Nagios Core、OpenNMS、NetXMS。</p></blockquote><h3 id="5-1、Zenoss-Core"><a href="#5-1、Zenoss-Core" class="headerlink" title="5.1、Zenoss Core"></a>5.1、Zenoss Core</h3><ul><li>特点<ul><li>管理界面专业、直观</li><li>支持200+设备数量管理</li><li>Zenpack插件丰富</li><li>自动识别设备，并创建配置模型</li><li>Web管理界面</li><li>强大的报告功能</li></ul></li><li>不足<ul><li>开源版相比商业版功能较弱</li><li>需要极高的硬件资源</li><li>官方版仅支持RHEL、cent os，社区也支持Debian和Ubuntu</li></ul></li><li>参考<ul><li><a href="http://www.zenoss.org/" target="_blank" rel="external">Zenoss Core官网</a></li><li><a href="https://www.zenoss.com/resources/documentation?field_zsd_core_value_selective=Core&amp;field_product_value_selective=All&amp;field_version_sort_tid_selective=56&amp;mkt_tok=eyJpIjoiWVRZeE56WmxPV1poTmpVMyIsInQiOiJ4RGwrNG13OTM2ZWJCY2FJUHRoU1ZlaU03QWQwSlQ0TzRucHIzREF1WDY0eWFzbDl5eGp2OFl2a3FPakNRTVJrdEZFVEJzdlRFcjNrelBXREhaQnVPYVBuM3B6K0NxelRSZDNvMkwzQ2NlYz0ifQ%3D%3D" target="_blank" rel="external">官方文档</a></li><li><a href="http://wiki.zenoss.org/Install_Zenoss?mkt_tok=eyJpIjoiWm1JME1EUmxOR0kyTURobCIsInQiOiJwUDZjanpqRnl5S01RcllqYkVnbWtlRTJVRzhlNEtUS2pUa2V6XC94Y2JIaksxcDBcL3dpcit4T2Y3U3BUdGhwRTU2TDdQYXhaMWk4WmVJeEsxR011SWluUzJuWFwvV0NUaDdoQXpzcWhjNklwZz0ifQ%3D%3D" target="_blank" rel="external">官方Wiki</a></li><li><a href="http://sourceforge.net/projects/zenoss/files/latest/download?source=files" target="_blank" rel="external">带有zenoss的VMware镜像下载</a> </li></ul></li></ul><h3 id="5-2、OpenNMS"><a href="#5-2、OpenNMS" class="headerlink" title="5.2、OpenNMS"></a>5.2、OpenNMS</h3><ul><li>特点<ul><li>基于Java的跨平台</li><li>网络自动识别</li><li>自动配置、自动识别服务</li><li>有15000+的SNMP trap插件</li><li>多种通知推送方式</li><li>可与Asterisk电话平台交互</li><li>支持报告和web管理界面</li></ul></li><li>不足<ul><li>需要完整的JDK</li><li>需要PostgreSQL数据库</li></ul></li><li>参考<ul><li><a href="http://www.opennms.org/en" target="_blank" rel="external">OpenNMS官网</a></li></ul></li></ul><h3 id="5-3、NetXMS"><a href="#5-3、NetXMS" class="headerlink" title="5.3、NetXMS"></a>5.3、NetXMS</h3><ul><li>特点  <ul><li>原生跨平台</li><li>支持多种SQL数据库</li><li>支持管理Android设备</li><li>支持报警短信、邮件</li><li>支持报告</li><li>自动发现网络</li></ul></li><li>不足<ul><li>配置较为复杂</li></ul></li><li>参考<ul><li><a href="http://www.netxms.org/download/" target="_blank" rel="external">NetXMS — Download</a></li><li><a href="https://wiki.netxms.org/wiki/Main_Page" target="_blank" rel="external">官方wiki</a></li><li><a href="http://www.netxms.org/documentation/" target="_blank" rel="external">配置和用户手册</a><h3 id="5-4、Catci"><a href="#5-4、Catci" class="headerlink" title="5.4、Catci"></a>5.4、Catci</h3></li></ul></li><li>特点<ul><li>强大的画图功能</li><li>依赖snmp流量监测网络</li></ul></li><li>不足<ul><li>更适合端口流量监控</li></ul></li><li>参考<ul><li><a href="http://www.cacti.net/" target="_blank" rel="external">Catci官网</a>   </li></ul></li></ul><h3 id="5-5、Nagios"><a href="#5-5、Nagios" class="headerlink" title="5.5、Nagios"></a>5.5、Nagios</h3><ul><li>特点<ul><li>配置简单</li><li>支持自动发现、通知报告</li></ul></li><li>不足<ul><li>免费版仅提供开源监控引擎</li><li>仅支持linux</li><li>不带web引擎，需要专门的web服务器来提供web管理界面</li></ul></li></ul><h3 id="5-6、Zabbix"><a href="#5-6、Zabbix" class="headerlink" title="5.6、Zabbix"></a>5.6、Zabbix</h3><ul><li>特点<ul><li>安装配置简单</li><li>支持多语言</li><li>开源</li><li>自动发现服务器与设备</li><li>分布式监视和web集中管理</li><li>可以无agent进行监视</li><li>email通知 </li></ul></li><li>主要功能<ul><li>CPU负荷</li><li>内存使用</li><li>磁盘使用</li><li>网络状况</li><li>端口监视</li><li>日志监视</li></ul></li><li>参考<ul><li><a href="http://www.zabbix.com/" target="_blank" rel="external">Zabbix官网</a></li><li><a href="http://blog.chinaunix.net/uid-25266990-id-3380929.html" target="_blank" rel="external">详解zabbix安装部署（Server端篇）-鸟哥のlinux-ChinaUnix博客</a></li><li><a href="https://github.com/open-falcon" target="_blank" rel="external">Open-Falcon 小米科技的类似Zabbix的开源监控项目</a> </li><li>open-falcon/open-falcon: open-falcon primary repository，all-in-one<br><a href="https://github.com/open-falcon/open-falcon" target="_blank" rel="external">https://github.com/open-falcon/open-falcon</a></li></ul></li></ul><h3 id="5-7、Prometheus"><a href="#5-7、Prometheus" class="headerlink" title="5.7、Prometheus"></a>5.7、Prometheus</h3><ul><li>开源网络监控系统</li><li>go语言开发</li><li>高维度数据模型</li><li>自定义查询语言</li><li>可视化数据展示</li><li>高效的存储策略</li><li>易于运维</li><li>提供各种客户端开发库</li><li>警告和报警</li><li>数据导出</li><li>官网：<a href="https://prometheus.io/" target="_blank" rel="external">https://prometheus.io/</a></li></ul><h3 id="5-8、open-falcon"><a href="#5-8、open-falcon" class="headerlink" title="5.8、open-falcon"></a>5.8、open-falcon</h3><ul><li>小米科技的开源监控项目</li><li>go语言开发</li><li>高效并发分布式</li><li>在国内广泛应用</li></ul><h3 id="5-9、小结"><a href="#5-9、小结" class="headerlink" title="5.9、小结"></a>5.9、小结</h3><p>目前国内IT企业广泛应用的主流监控系统，商业付费的有：</p><blockquote><ul><li><a href="http://www.solarwinds.cn/" target="_blank" rel="external"><strong>solarwinds</strong></a></li><li><a href="http://www.jiankongbao.com/" target="_blank" rel="external"><strong>监控宝</strong></a></li><li>阿里云、腾讯云，Amazon，VMware等云平台附带的监控系统，用于监控云主机，服务器；</li></ul></blockquote><p>开源监控系统主要有：</p><blockquote><ul><li><strong>Catci</strong>，监控分析端口流量。</li><li><strong>Nagios</strong>，在Zabbix出现之前，和Catci一样被各类企业广泛应用</li><li><strong>Zabbix</strong>,开源监控方案的第一选择，分布式，自动化监控预警、快速部署优势明显，超大型大型网络会有性能瓶颈。58同城曾为其贡献过插件Zatree，小米科技早期也用的它。</li><li><strong>open-falcon</strong>,基于go语言，并发高效，支持分布；由小米科技维护的开源监控解决方案。小米科技，金山，百度，腾讯，阿里，美团等大量国内IT企业使用，可管理机器设备1W+；</li><li><strong>prometheus</strong>，新出的开源项目，因为是基于go语言，在性能表现更出色，主要用于Docker监控与云监控，于2016年7月发布1.0版本。 </li></ul></blockquote><p> 综上，Zabbix是最佳选择。我会在下一章节进行实验，尝试部署、应用Zabbix，用来监控网络中的主机和设备。</p><h2 id="第6章、Zabbix部署和应用"><a href="#第6章、Zabbix部署和应用" class="headerlink" title="第6章、Zabbix部署和应用"></a>第6章、Zabbix部署和应用</h2><h3 id="6-1、安装Zabbix服务"><a href="#6-1、安装Zabbix服务" class="headerlink" title="6.1、安装Zabbix服务"></a>6.1、安装Zabbix服务</h3><ul><li>安装web环境<ul><li>zabbix通过web提供管理界面，需要LAMP或LNMP环境</li></ul></li><li>设置zabbix数据库<ul><li>使用mysql，要给Zabbix用户授予向相应的权限</li></ul></li><li>安装zabbix服务端<ul><li>安装zabbix服务，并导入数据库表 </li><li>添加配置文件并修改对应的zabbix数据库密码</li><li>修改Agentd配置文件</li><li>配置web前端</li></ul></li><li>进入zabbix前端进一步配置<ul><li>访问<a href="http://zabbixIP/zabbix，配置数据库连接，生成登录界面" target="_blank" rel="external">http://zabbixIP/zabbix，配置数据库连接，生成登录界面</a></li></ul></li><li><p>启动服务</p><ul><li>service zabbix_server start</li><li><p>设置开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi /etc/rc.d/rc.local,添加：</div><div class="line">/usr/local/zabbix/sbin/zabbix_server start</div><div class="line">/usr/local/zabbix/sbin/zabbix_agentd start</div></pre></td></tr></table></figure><p>通过浏览器访问zabbix服务 <img src="http://ww3.sinaimg.cn/large/af9df239gw1f63lvxo0y7j211y0hntb5.jpg" alt=""></p></li></ul></li><li><p>使用zabbix集成应用系统</p><ul><li>zabbix安装配置过程较为复杂繁琐，耗费时间</li><li>我使用了官方提供的Zabbix Appliance，集成了zabbix 3.0的 Ubuntu 14.04 64位系统镜像</li></ul></li></ul><h3 id="6-2、安装Zabbix-Agent"><a href="#6-2、安装Zabbix-Agent" class="headerlink" title="6.2、安装Zabbix Agent"></a>6.2、安装Zabbix Agent</h3><blockquote><p>zabbix agent 主要负责收集其监控主机的硬件信息和服务信息，zabbix server 也可以不用agent，使用SNMP，WMI，ICMP ping，端口扫描等收集信息。</p></blockquote><h3 id="6-3、Zabbix配置与监控"><a href="#6-3、Zabbix配置与监控" class="headerlink" title="6.3、Zabbix配置与监控"></a>6.3、Zabbix配置与监控</h3><ul><li>添加主机</li><li>自动发现</li><li>配置监控模板</li><li>预警邮件通知</li></ul><h3 id="6-4、Zabbix-SNMP监控"><a href="#6-4、Zabbix-SNMP监控" class="headerlink" title="6.4、Zabbix SNMP监控"></a>6.4、Zabbix SNMP监控</h3><ul><li>添加SNMP接口的主机</li><li>确定要监控的SNMP OID或字符串<ul><li><a href="http://www.ttlsa.com/monitor/snmp-oid/" target="_blank" rel="external">SNMP OID列表 监控需要用到的OID</a> </li></ul></li><li><p>创建监控项item</p></li><li><p>监控磁盘获取的SNMP信息<br><img src="http://ww2.sinaimg.cn/large/af9df239jw1f665g40ljij211y0hndjp.jpg" alt=""></p></li></ul><h2 id="第7章、FreeSwitch的SNMP模块"><a href="#第7章、FreeSwitch的SNMP模块" class="headerlink" title="第7章、FreeSwitch的SNMP模块"></a>第7章、FreeSwitch的SNMP模块</h2><h3 id="7-1、编译mod-SNMP模块"><a href="#7-1、编译mod-SNMP模块" class="headerlink" title="7.1、编译mod_SNMP模块"></a>7.1、编译mod_SNMP模块</h3><ul><li><p>编译所需依赖包</p><ul><li><code>net-snmp-devel</code> or <code>net-snmp-dev</code></li><li><code>openssl-devel</code> or <code>openssl-dev</code></li></ul></li><li><p>freeswitch默认不编译mod_snmp</p><ul><li>在源码目录modules.conf配置要编译的模块，取消对mod_SNMP的注释</li><li>然后编译安装freeswitch时会自动编译mod_snmp</li><li>在/usr/local/freeswitch/conf/autoload_configs/modules.conf.xml文件中指定启动自动加载此模块。 </li></ul></li><li>单独编译模块<ul><li>如果已安装fs，则可以用make install-mod_XX进行编译</li><li><code>make install-mod_snmp</code></li></ul></li><li>在fs中加载mod_snmp<ul><li>进入fs终端后，<code>load mod_snmp</code></li></ul></li></ul><h3 id="7-2、配置SNMP-agentx"><a href="#7-2、配置SNMP-agentx" class="headerlink" title="7.2、配置SNMP agentx"></a>7.2、配置SNMP agentx</h3><ul><li>mod_snmp是使用net-snmp的agentX开发的snmp子代理程序</li><li>mod_snmp需要注册到系统的SNMP主代理上，接收主代理提出的请求并返回结果。</li><li>主代理可以通过mod_snmp请求相应的OID，获取FS的状态，而无需在fs终端或fs_cli前端使用freeswitch命令 <code>status</code></li><li>运行fs的系统中需要安装net-snmp和<code>snmp-mibs-downloader</code>，且snmpd作为主代理运行。</li><li><p>修改snmpd.conf配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vi /etc/snmp/snmpd.conf</div><div class="line"># 添加以下内容，为freeswitch用户连接snmpd提供权限</div><div class="line">#  agentXPerms  SOCKPERMS [DIRPERMS [USER|UID [GROUP|GID]]]</div><div class="line">agentXPerms     0755 0755 freeswitch daemon</div><div class="line"></div><div class="line">#其他要修改的地方参考前文，主要是snmp远程访问，view访问MIB的范围限制</div></pre></td></tr></table></figure></li></ul><h3 id="7-3、freeswitch-MIB和OID"><a href="#7-3、freeswitch-MIB和OID" class="headerlink" title="7.3、freeswitch MIB和OID"></a>7.3、freeswitch MIB和OID</h3><ul><li>OID节点<code>.1.3.6.1.4.1.27880</code>是fs注册的，整个fs OID tree参考<a href="https://freeswitch.org/confluence/display/FREESWITCH/FreeSWITCH+OID" target="_blank" rel="external">FreeSWITCH OID</a></li><li>walk整个OID tree<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">snmpwalk.exe -v 1 -c public 192.168.233.129 .1.3.6.1.4.1.27880</div><div class="line">SNMPv2-SMI::enterprises.27880.1.1.1.0 = Hex-STRING: C0 58 DA 7C 5A 7F 00 00 00 00 00 00 00 00 00 00</div><div class="line">00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</div><div class="line">00 00 00 00 00 00 00 00 00 00 00</div><div class="line">SNMPv2-SMI::enterprises.27880.1.1.2.0 = STRING: &quot;efc3110f-e4ec-4cb7-8295-7d60bf8f3c29&quot;</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.1.0 = Timeticks: (1595704) 4:25:57.04</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.2.0 = Counter32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.3.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.4.0 = Gauge32: 1000</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.5.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.6.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.7.0 = Gauge32: 30</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.8.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.9.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.10.0 = Gauge32: 0</div><div class="line">SNMPv2-SMI::enterprises.27880.1.2.11.0 = Gauge32: 0</div></pre></td></tr></table></figure></li></ul><ul><li>.1 to .1000: reserved for core </li><li>.1: core      <ul><li>.1.1: identity<ul><li><em>.1.3.6.1.4.1.27880.1.1.1</em>: FreeSWITCH version string (eg. “1.0.head (git-0cf1d54 2011-01-19 16-36-04 -0500)”)</li><li><em>.1.3.6.1.4.1.27880.1.1.2</em>: Core UUID as a string</li></ul></li></ul></li><li><p>.2: systemStats</p><ul><li><em>.1.3.6.1.4.1.27880.1.2.1</em>: FreeSWITCH uptime as SNMP TimerTicks (hundredths of seconds)</li><li><em>.1.3.6.1.4.1.27880.1.2.2</em>: Number of sessions since FreeSWITCH was started</li><li><em>.1.3.6.1.4.1.27880.1.2.3</em>: Currently active sessions</li><li><em>.1.3.6.1.4.1.27880.1.2.4</em>: Maximum allowed sessions</li><li><em>.1.3.6.1.4.1.27880.1.2.5</em>: Currently active calls</li><li><em>.1.3.6.1.4.1.27880.1.2.6</em>:Current sessions per second</li><li><em>.1.3.6.1.4.1.27880.1.2.7</em>: Maximum allowed sessions per second</li><li><em>.1.3.6.1.4.1.27880.1.2.8</em>: Peak sessions per second</li><li><em>.1.3.6.1.4.1.27880.1.2.9</em>: Peak sessions per second Last Five Minutes</li><li><em>.1.3.6.1.4.1.27880.1.2.10</em>: Peak sessions</li><li><em>.1.3.6.1.4.1.27880.1.2.11</em>: Peak sessions Last Five Minutes</li></ul></li><li>.1000:mod_snmp<ul><li><em>.1.3.6.1.4.1.27880.1000</em>: mod_snmp</li></ul></li><li>.1001-2000:reserved for modules</li><li><em>.1.3.6.1.4.1.27880.1001</em>: mod_sofia</li><li><em>.1.3.6.1.4.1.27880.1002</em>: mod_skinny<ul><li><em>.1.3.6.1.4.1.27880.1002.1</em>: Skinny LDAP schema</li></ul></li></ul><h2 id="附录-参考文章"><a href="#附录-参考文章" class="headerlink" title="附录 参考文章"></a>附录 参考文章</h2><p><a href="http://freeloda.blog.51cto.com/2033581/1306743/" target="_blank" rel="external">1、 SNMP 原理与实战详解 - 51CTO</a><br><a href="https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol#cite_note-14" target="_blank" rel="external">2、Simple Network Management Protocol - Wikipedia</a><br><a href="http://blog.sina.com.cn/s/blog_4502d59c0101fcy2.html" target="_blank" rel="external">3、SNMP介绍，OID及MIB库–新浪博客</a><br><a href="http://blog.csdn.net/jonbb/article/details/51353621" target="_blank" rel="external">4、SNMP4J介绍 - jonbb的博客-CSDN.NET</a><br><a href="http://os.51cto.com/art/201307/402538_3.htm" target="_blank" rel="external">5、四大开源网络管理工具详解 - 51CTO.COM</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SNMP的发展应用调研报告&quot;&gt;&lt;a href=&quot;#SNMP的发展应用调研报告&quot; class=&quot;headerlink&quot; title=&quot;SNMP的发展应用调研报告&quot;&gt;&lt;/a&gt;SNMP的发展应用调研报告&lt;/h1&gt;&lt;h2 id=&quot;第1章-SNMP基础概述&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="SNMP" scheme="http://shuaiyy.cn/tags/SNMP/"/>
    
  </entry>
  
  <entry>
    <title>从二次型最优化问题中理解矩阵特征值的意义</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2015-09-12-Intuition-of-Eigen-Value/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2015-09-12-Intuition-of-Eigen-Value/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>###惯例开场故事<br>在某次从实验室去往食堂的路上，曾发生这样一段对话：</p><p>『大师兄，为什么你对算法的理解总是那么透彻呢？为什么我很难看出它背后的思想？』</p><p>『因为你去理解一个算法的时候，不能只是看懂它的形，还要去思考它的神啊~』</p><p>这就是我天分不够当不了科学家的佐证吧T。T</p><p>###从二次型最优化来理解<br>最小化二次型目标函数<a href="http://www.codecogs.com/eqnedit.php?latex=f(x)=x^TAx" target="_blank"><img src="http://latex.codecogs.com/gif.latex?f(x)=x^TAx" title="f(x)=x^TAx"></a>，其中A为已知的实对称二阶矩阵，<a href="http://www.codecogs.com/eqnedit.php?latex=A=[1,0.5;0.5,1]" target="_blank"><img src="http://latex.codecogs.com/gif.latex?A=[1,0.5;0.5,1]" title="A=[1,0.5;0.5,1]"></a>，<a href="http://www.codecogs.com/eqnedit.php?latex=x=[x_1,x_2]^{\textrm{T}}&space;\in&space;\textcal{R}^2" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x=[x_1,x_2]^{\textrm{T}}&space;\in&space;\textcal{R}^2" title="x=[x_1,x_2]^{\textrm{T}} \in \textcal{R}^2"></a>.这个问题的求解很简单，这里以此为例来说明该问题与矩阵特征值的关系。</p><p>首先，可以得到目标函数的网格图与等高线图如下。</p><p><img src="/public/img/posts/mesh_of_f.png" alt="1"><br><img src="/public/img/posts/contour_of_f.png" alt="2"></p><p>对矩阵A进行特征分解可以得到其特征向量为[-0.7071, 0.7071], [0.7071, 0.7071]，对应的特征值分别是0.5, 1.5.</p><p>观察函数的等高线图可以知道，等高线最密集的地方，函数值变化最快，而这个函数值变化最快的方向归一化后就是[0.7071, 0.7071]，这恰好是矩阵的一个特征向量。同样地，可以观察，等高线最稀疏的地方，函数值变化最慢，变化方向则是矩阵的另一个特征向量。可以看出，<code>矩阵特征值的大小与函数值的变化快慢有关</code>，较大特征值所对应的特征向量方向上函数值的变化较快，较小特征值所对应的特征向量方向上函数值的变化较慢。</p><p>进一步，对于实对称矩阵，我们总是可以对其进行相似变化，得到一个以该矩阵特征值为对角线元素的对角阵。<a href="http://www.codecogs.com/eqnedit.php?latex=P^{-1}AP=B" target="_blank"><img src="http://latex.codecogs.com/gif.latex?P^{-1}AP=B" title="P^{-1}AP=B"></a>，其中，P为正交矩阵，有性质P的逆等于P的转置。把目标函数改写为<a href="http://www.codecogs.com/eqnedit.php?latex=f(x)=x^{\textrm{T}}PBP^{\textrm{T}}x" target="_blank"><img src="http://latex.codecogs.com/gif.latex?f(x)=x^{\textrm{T}}PBP^{\textrm{T}}x" title="f(x)=x^{\textrm{T}}PBP^{\textrm{T}}x"></a>，其中<a href="http://www.codecogs.com/eqnedit.php?latex=B=[0.5,&space;0;&space;0,&space;1.5]" target="_blank"><img src="http://latex.codecogs.com/gif.latex?B=[0.5,&space;0;&space;0,&space;1.5]" title="B=[0.5, 0; 0, 1.5]"></a>. 相似变换的作用可以理解为将等高线图进行旋转，于是得到下面经过旋转后的等高线图。</p><p><img src="/public/img/posts/contour_of_f_B.png" alt="3"></p><p>在这张图上说明矩阵特征值的意义。当函数值取1时所对应的椭圆等高线的长轴长度为<a href="http://www.codecogs.com/eqnedit.php?latex=\frac{1}{\sqrt{0.5}}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\frac{1}{\sqrt{0.5}}" title="\frac{1}{\sqrt{0.5}}"></a>， 即由矩阵特征值0.5决定。同理，该椭圆短轴长度为<a href="http://www.codecogs.com/eqnedit.php?latex=\frac{1}{\sqrt{1.5}}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\frac{1}{\sqrt{1.5}}" title="\frac{1}{\sqrt{1.5}}"></a>，由矩阵特征值1.5决定。</p><p>二阶矩阵的理解较为直观。高阶矩阵的道理是一样的。</p><p>###资料</p><p>【1】<a href="http://www.zhihu.com/question/21874816/answer/19592526" target="_blank" rel="external">如何理解矩阵特征值</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###惯例开场故事&lt;br&gt;在某次从实验室去往食堂的路上，曾发生这样一段对话：&lt;/p&gt;
&lt;p&gt;『大师兄，为什么你对算法的理解总是那么透彻呢？为什么我很难看出它背后的思想？』&lt;/p&gt;
&lt;p&gt;『因为你去理解一个算法的时候，不能只是看懂它的形，还要去思考它的神啊~』&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Math Optimization" scheme="http://shuaiyy.cn/tags/Math-Optimization/"/>
    
  </entry>
  
  <entry>
    <title>牛顿法与拟牛顿法（DFP BFGS LBFGS VLBFGS）</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2015-03-23-Newton-QuasiNewton-Method/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2015-03-23-Newton-QuasiNewton-Method/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做LBFGS的并行，顺便把牛顿法、拟牛顿法顺理一下。</p><p>拟牛顿法是求解非线性优化问题最有效的方法之一。考虑无约束的极小化问题<a href="http://www.codecogs.com/eqnedit.php?latex=\min\limits_x&space;f(x)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\min\limits_x&space;f(x)" title="\min\limits_x f(x)"></a>，假设<a href="http://www.codecogs.com/eqnedit.php?latex=f(x)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?f(x)" title="f(x)"></a>为凸函数，且二阶连续可导。</p><p>###原始牛顿法<br>基本思想：在现有极小点估计值的附近对f(x)进行二阶泰勒展开，进而找到下一个极小点的估计值</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=x_{k&plus;1}=x_{k}-(H_k)^{-1}g_{k},&space;k=0,1,\cdots" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x_{k&plus;1}=x_{k}-(H_k)^{-1}g_{k},&space;k=0,1,\cdots" title="x_{k+1}=x_{k}-(H_k)^{-1}g_{k}, k=0,1,\cdots"></a></p><p>牛顿法具有二次收敛性，但当目标函数非二次型时，牛顿法不能保证函数稳定地下降（缺点）。</p><p>###阻尼牛顿法<br>每次迭代前需要沿迭代方向<a href="http://www.codecogs.com/eqnedit.php?latex=d_k=-(H_k)^{-1}g_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?d_k=-(H_k)^{-1}g_k" title="d_k=-(H_k)^{-1}g_k"></a>做线搜索，寻求最优的步长因子<a href="http://www.codecogs.com/eqnedit.php?latex=\lambda_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\lambda_k" title="\lambda_k"></a>，即</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\lambda_k&space;=&space;\arg\min\limits_{\lambda}&space;f(x_k&plus;\lambda&space;d_k)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\lambda_k&space;=&space;\arg\min\limits_{\lambda}&space;f(x_k&plus;\lambda&space;d_k)" title="\lambda_k = \arg\min\limits_{\lambda} f(x_k+\lambda d_k)"></a></p><p>###拟牛顿法<br>基本思想：不使用二阶偏导数而构造出可以近似Hession或Hession的逆的正定对称阵，在“拟牛顿”的条件下优化目标函数。</p><p>先推导拟牛顿条件：在<a href="http://www.codecogs.com/eqnedit.php?latex=x_{k&plus;1}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x_{k&plus;1}" title="x_{k+1}"></a>附近对<a href="http://www.codecogs.com/eqnedit.php?latex=f(x)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?f(x)" title="f(x)"></a>做泰勒展开，取二阶近似项</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=f(x)=f(x_{k&plus;1})&plus;\nabla&space;f(x_{k&plus;1})(x-x_{k&plus;1})&plus;\frac{1}{2}(x-x_{k&plus;1})^T\nabla^2&space;f(x_{k&plus;1})(x-x_{k&plus;1})" target="_blank"><img src="http://latex.codecogs.com/gif.latex?f(x)=f(x_{k&plus;1})&plus;\nabla&space;f(x_{k&plus;1})(x-x_{k&plus;1})&plus;\frac{1}{2}(x-x_{k&plus;1})^T\nabla^2&space;f(x_{k&plus;1})(x-x_{k&plus;1})" title="f(x)=f(x_{k+1})+\nabla f(x_{k+1})(x-x_{k+1})+\frac{1}{2}(x-x_{k+1})^T\nabla^2 f(x_{k+1})(x-x_{k+1})"></a><br>推出</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\nabla&space;f(x)\approx&space;\nabla&space;f(x_{k&plus;1})&plus;H_{k&plus;1}(x-x_{k&plus;1})" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\nabla&space;f(x)\approx&space;\nabla&space;f(x_{k&plus;1})&plus;H_{k&plus;1}(x-x_{k&plus;1})" title="\nabla f(x)\approx \nabla f(x_{k+1})+H_{k+1}(x-x_{k+1})"></a><br>取<a href="http://www.codecogs.com/eqnedit.php?latex=x=x_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x=x_k" title="x=x_k"></a>，推出</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=g_{k&plus;1}-g_{k}\approx&space;H_{k&plus;1}(x_{k&plus;1}-x_k)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?g_{k&plus;1}-g_{k}\approx&space;H_{k&plus;1}(x_{k&plus;1}-x_k)" title="g_{k+1}-g_{k}\approx H_{k+1}(x_{k+1}-x_k)"></a></p><p>引入记号 <a href="http://www.codecogs.com/eqnedit.php?latex=s_k=x_{k&plus;1}-x_{k},&space;y_k=g_{k&plus;1}-g_{k}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?s_k=x_{k&plus;1}-x_{k},&space;y_k=g_{k&plus;1}-g_{k}" title="s_k=x_{k+1}-x_{k}, y_k=g_{k+1}-g_{k}"></a>， 推出</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=y_k=H_{k&plus;1}s_k&space;,&space;s_k=H^{-1}_{k&plus;1}y_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?y_k=H_{k&plus;1}s_k&space;,&space;s_k=H^{-1}_{k&plus;1}y_k" title="y_k=H_{k+1}s_k , s_k=H^{-1}_{k+1}y_k"></a>(<code>拟牛顿条件</code>)</p><p>它迭代过程中的hession矩阵做约束，因此，对hession对近似的<a href="http://www.codecogs.com/eqnedit.php?latex=B_{k&plus;1}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?B_{k&plus;1}" title="B_{k+1}"></a>，以及对hession的逆做近似的<a href="http://www.codecogs.com/eqnedit.php?latex=D_{k&plus;1}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?D_{k&plus;1}" title="D_{k+1}"></a>，可以将</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=y_{k}=B_{k&plus;1}s_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?y_{k}=B_{k&plus;1}s_k" title="y_{k}=B_{k+1}s_k"></a> 或 <a href="http://www.codecogs.com/eqnedit.php?latex=s_{k}=D_{k&plus;1}y_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?s_{k}=D_{k&plus;1}y_k" title="s_{k}=D_{k+1}y_k"></a> 作为指导。</p><p>####DFP算法（Davidon–Fletcher–Powell formula）</p><p>核心：通过迭代的方法，对hession的逆做近似。迭代格式为</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=D_{k&plus;1}=D_k&plus;\Delta&space;D_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?D_{k&plus;1}=D_k&plus;\Delta&space;D_k" title="D_{k+1}=D_k+\Delta D_k"></a>（通常<a href="http://www.codecogs.com/eqnedit.php?latex=D_0=I" target="_blank"><img src="http://latex.codecogs.com/gif.latex?D_0=I" title="D_0=I"></a>）</p><p>猜想<a href="http://www.codecogs.com/eqnedit.php?latex=\Delta&space;D_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Delta&space;D_k" title="\Delta D_k"></a>待定为<a href="http://www.codecogs.com/eqnedit.php?latex=\Delta&space;D_k=\alpha&space;\mathbf{u}&space;\mathbf{u}^{\mathrm{T}}&plus;\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Delta&space;D_k=\alpha&space;\mathbf{u}&space;\mathbf{u}^{\mathrm{T}}&plus;\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}" title="\Delta D_k=\alpha \mathbf{u} \mathbf{u}^{\mathrm{T}}+\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}"></a>（具有对称性）</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\Rightarrow&space;s_k=D_ky_k&plus;\alpha\mathbf{u}\mathbf{u}^{\mathrm{T}}y_k&plus;\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}y_k=D_ky_k&plus;(\alpha\mathbf{u}^{\mathrm{T}}y_k)\mathbf{u}&plus;(\beta\mathbf{v}^{\mathrm{T}}y_k)\mathbf{v}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Rightarrow&space;s_k=D_ky_k&plus;\alpha\mathbf{u}\mathbf{u}^{\mathrm{T}}y_k&plus;\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}y_k=D_ky_k&plus;(\alpha\mathbf{u}^{\mathrm{T}}y_k)\mathbf{u}&plus;(\beta\mathbf{v}^{\mathrm{T}}y_k)\mathbf{v}" title="\Rightarrow s_k=D_ky_k+\alpha\mathbf{u}\mathbf{u}^{\mathrm{T}}y_k+\beta\mathbf{v}\mathbf{v}^{\mathrm{T}}y_k=D_ky_k+(\alpha\mathbf{u}^{\mathrm{T}}y_k)\mathbf{u}+(\beta\mathbf{v}^{\mathrm{T}}y_k)\mathbf{v}"></a></p><p>括号中是数值，将其分别简单赋值为1，-1，即</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\alpha=\frac{1}{\mathbf{u}^{\mathrm{T}}y_k},\beta=-\frac{1}{\mathbf{v}^{\mathrm{T}}y_k}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\alpha=\frac{1}{\mathbf{u}^{\mathrm{T}}y_k},\beta=-\frac{1}{\mathbf{v}^{\mathrm{T}}y_k}" title="\alpha=\frac{1}{\mathbf{u}^{\mathrm{T}}y_k},\beta=-\frac{1}{\mathbf{v}^{\mathrm{T}}y_k}"></a></p><p>其中向量u,v仍有待确定，由上面</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\Rightarrow&space;\mathbf{u}-\mathbf{v}=s_k-D_ky_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Rightarrow&space;\mathbf{u}-\mathbf{v}=s_k-D_ky_k" title="\Rightarrow \mathbf{u}-\mathbf{v}=s_k-D_ky_k"></a>（要此式成立，不妨直接取<a href="http://www.codecogs.com/eqnedit.php?latex=\mathbf{u}=s_k,\mathbf{v}=D_ky_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\mathbf{u}=s_k,\mathbf{v}=D_ky_k" title="\mathbf{u}=s_k,\mathbf{v}=D_ky_k"></a>）</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\Rightarrow&space;\alpha=\frac{1}{s^{\mathrm{T}}_ky_k},\beta=-\frac{1}{y^{\mathrm{T}}_kD_ky_k}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Rightarrow&space;\alpha=\frac{1}{s^{\mathrm{T}}_ky_k},\beta=-\frac{1}{y^{\mathrm{T}}_kD_ky_k}" title="\Rightarrow \alpha=\frac{1}{s^{\mathrm{T}}_ky_k},\beta=-\frac{1}{y^{\mathrm{T}}_kD_ky_k}"></a></p><p>至此，校正矩阵<a href="http://www.codecogs.com/eqnedit.php?latex=\Delta&space;D_k" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Delta&space;D_k" title="\Delta D_k"></a>就已经构造出来了</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\Rightarrow&space;\Delta&space;D_k=\frac{s_ks_k^{\mathrm{T}}}{s_k^{\mathrm{T}}y_k}-\frac{D_ky_ky_k^{\mathrm{T}}D_k}{y_k^{\mathrm{T}}D_ky_k}" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\Rightarrow&space;\Delta&space;D_k=\frac{s_ks_k^{\mathrm{T}}}{s_k^{\mathrm{T}}y_k}-\frac{D_ky_ky_k^{\mathrm{T}}D_k}{y_k^{\mathrm{T}}D_ky_k}" title="\Rightarrow \Delta D_k=\frac{s_ks_k^{\mathrm{T}}}{s_k^{\mathrm{T}}y_k}-\frac{D_ky_ky_k^{\mathrm{T}}D_k}{y_k^{\mathrm{T}}D_ky_k}"></a></p><p>####BFGS算法（Broyden–Fletcher–Goldfarb–Shanno algorithm）<br>核心公式的推导过程与DFP完全类似，只是互换了其中s{k}和y{k}的位置。BFGS直接逼近Hession矩阵B_k。(公式敲起来太累了，请自行推导)</p><p>####LBFGS算法(limited-memory BFGS)<br>不再存储完整的D_k，而是存储计算过程中的向量序列{s}，{y}。当需要矩阵D_k时，利用向量序列的计算来代替。并且，向量序列也不是全部存储，而是固定存最新的m个。</p><p>若要实现并行，需要同时在x与梯度（影响y的计算）那儿求一致平均。</p><p>###资料</p><p>【1】<a href="http://en.wikipedia.org/wiki/Davidon%E2%80%93Fletcher%E2%80%93Powell_formula" target="_blank" rel="external">DFP算法</a></p><p>【2】<a href="http://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm" target="_blank" rel="external">BFGS算法</a></p><p>【3】<a href="http://en.wikipedia.org/wiki/Limited-memory_BFGS" target="_blank" rel="external">LBFGS算法</a></p><p>【4】<a href="http://papers.nips.cc/paper/5333-large-scale-l-bfgs-using-mapreduce.pdf" target="_blank" rel="external">Large-scale L-BFGS using MapReduce</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做LBFGS的并行，顺便把牛顿法、拟牛顿法顺理一下。&lt;/p&gt;
&lt;p&gt;拟牛顿法是求解非线性优化问题最有效的方法之一。考虑无约束的极小化问题&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=\min\limits_x&amp;sp
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Math Optimization" scheme="http://shuaiyy.cn/tags/Math-Optimization/"/>
    
  </entry>
  
  <entry>
    <title>大数据机器学习初探---南大李武军</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2015-02-04-Group-Meeting/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2015-02-04-Group-Meeting/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>每周的组会大概会持续2小时。如果是主讲，就需要花更多的时间去准备报告内容。之前，组会开完我就不管了，缺乏总结思考。而这样子的话实质上意义就不大了，没有内化为自己的知识，也没有什么critical thinking。从现在开始，记录每一次组会的思考。</p><p>常言道：亡羊补牢，为时未晚。T.T</p><p>###Outline</p><ul><li>Learning to Hash</li><li>Distributed Learning</li><li>Stochastic Learning</li></ul><p>有一个形象的比喻是这样说的，大数据是金矿，云计算是采矿技术，大数据机器学习是冶金技术。</p><p>大数据机器学习面临的挑战，一是存储，而是计算速度，三是网络。</p><p>哈希学习，在内存、硬盘、cpu、通信上有优势；<br>分布式学习在内存、硬盘、cpu上有优势，但会增加通信成本；随机学习在内存、硬盘、cpu方面有优势。</p><p>###Learning to Hash<br>主讲人：大师兄</p><p>最近邻搜索在大数据背景下，会出现维数灾难，存储成本也高，查询速度也慢。解决方法之一是保相似性哈希，可以降低维数并减少存储成本。通常用海明距离（hamming distance）来表征哈希值之间的差异。哈希方案也具有较快的查询速度，通常具有常数或者次线性的搜索时间复杂度；即使是穷举搜索也可以被接受，因为海明距离计算起来是很快的。</p><p>哈希函数学习的两个阶段：</p><ol><li>Projection Stage（dimension reduction）</li><li>Quantization Stage</li></ol><p>贡献：</p><ul><li>Isotropic Hash</li></ul><p>思想：学习一个正交阵（幻灯片21页），其目的是让大于某一阈值的feature的重要程度是一样的。</p><ul><li>Supervised Hashing with Latent Factor Models</li><li>Supervised Multimodal Hashing with SCM</li><li>Multiple-Bit Quantization</li></ul><p>###Distributed Learning<br>主讲人：我</p><p>主要内容：</p><ol><li>文章：Coupled Group Lasso for Web-Scale CTR Prediction</li><li>文章：Distributed Power-Law Graph Computing</li></ol><p>####文章1<br>为了解决在线广告的CTR（click through rate）预测，即当某广告展示给某用户时，它被该用户点击的概率，通常的方法是LR（logistic regression），即逻辑回归。但LR的一个短板是，因其是线性的，所以无法将用户与广告之间某些微妙的非线性关系纳入。注意LR中，正则项若为2范数平方，称为标准逻辑回归；正则项若为1范数，问题通常被叫做Lasso。所以需要一种新的方法。</p><p>这里的贡献是：</p><ol><li>CGL的似然定义中，可以纳入用户与广告之间的某些非线性关系的考量。</li><li>正则项改为参数的2-1范数，目的是是用户特征向量参数W、广告特征向量参数V中更多的行为0，行为0说明该行对应的feature没作用，即达到删除冗余feature的作用。</li></ol><p>分布式实现。这个算法具有较好的扩展性，一个master，若干slave，类似于并行计算，从而实现分布式。</p><p>####文章2<br>GP（graph partitioning）图分割的方法有两种：边分割；点分割。点分割在分布式计算中的通信成本会比图分割小，原因在于在不同的machine上，点分割只需保留点的copy，而边分割需要同时保留点与边的copy。</p><p>切割degree大的点，即邻居多的点可以降低通信成本。</p><p>###Stochastic Learning<br>主讲人：浩锋</p><p>思想：在需要用到所有节点上的信息时，通信代价往往很大，这时可以随机的选取某一个节点上的信息（比如梯度）作为替代品。</p><p>###资料<br>【1】<a href="http://cs.nju.edu.cn/lwj/slides/BigLearning.pdf" target="_blank" rel="external">幻灯片</a></p><p>【2】<a href="http://jmlr.csail.mit.edu/proceedings/papers/v32/yan14.pdf" target="_blank" rel="external">Coupled Group Lasso for<br>Web-Scale CTR Prediction in Display Advertising</a></p><p>【3】<a href="http://papers.nips.cc/paper/5396-distributed-power-law-graph-computing-theoretical-and-empirical-analysis.pdf" target="_blank" rel="external">Distributed Power-law Graph Computing:<br>Theoretical and Empirical Analysis</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每周的组会大概会持续2小时。如果是主讲，就需要花更多的时间去准备报告内容。之前，组会开完我就不管了，缺乏总结思考。而这样子的话实质上意义就不大了，没有内化为自己的知识，也没有什么critical thinking。从现在开始，记录每一次组会的思考。&lt;/p&gt;
&lt;p&gt;常言道：亡
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Math Optimization MachineLearning" scheme="http://shuaiyy.cn/tags/Math-Optimization-MachineLearning/"/>
    
  </entry>
  
  <entry>
    <title>凸优化的一些基础算法</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2014-11-10-Basic-Algorithms-of-Convex-Opt/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2014-11-10-Basic-Algorithms-of-Convex-Opt/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文假设读者对凸优化有基本了解，主要归纳一些基础算法，以便查阅。</p><p><a href="http://www.codecogs.com/eqnedit.php?latex=\min&space;f(x)&space;\triangleq&space;g(x)&plus;h(x)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?\min&space;f(x)&space;\triangleq&space;g(x)&plus;h(x)" title="\min f(x) \triangleq g(x)+h(x)"></a></p><p>其中，f，g，h都是凸函数，g是光滑项，h是非光滑项。</p><p>###Gradient Descent<br><a href="http://www.codecogs.com/eqnedit.php?latex=x^&plus;=x-\alpha\nabla&space;f(x)" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x^&plus;=x-\alpha\nabla&space;f(x)" title="x^+=x-\alpha\nabla f(x)"></a></p><p>###Proximal Gradient<br><a href="http://www.codecogs.com/eqnedit.php?latex=x^&plus;=prox_{\alpha&space;h}(x-\alpha&space;\nabla&space;g(x))=&space;\arg\min_u&space;h(u)&plus;\frac{1}{2\alpha}||u-x&plus;\alpha&space;\nabla&space;g(x)||" target="_blank"><img src="http://latex.codecogs.com/gif.latex?x^&plus;=prox_{\alpha&space;h}(x-\alpha&space;\nabla&space;g(x))=&space;\arg\min_u&space;h(u)&plus;\frac{1}{2\alpha}||u-x&plus;\alpha&space;\nabla&space;g(x)||" title="x^+=prox_{\alpha h}(x-\alpha \nabla g(x))= \arg\min_u h(u)+\frac{1}{2\alpha}||u-x+\alpha \nabla g(x)||"></a></p><p>###Conjugate Gradient<br>是介于最速下降法和牛顿法之间的一个方法，它仅需要利用一阶导数信息，但克服了最速下降法收敛慢的缺点，又避免了牛顿法需要存储和计算Hession并求逆的缺点。它是解决大型线性方程组最有用的方法之一，也是解决大型非线性最优化最有效的算法之一。</p><p>###Newton<br>见<a href="http://painterlin.com/2015/03/23/Newton-QuasiNewton-Method.html" target="_blank" rel="external">牛顿法与拟牛顿法（DFP BFGS LBFGS VLBFGS）</a></p><p>###Quasi Newton<br>见<a href="http://painterlin.com/2015/03/23/Newton-QuasiNewton-Method.html" target="_blank" rel="external">牛顿法与拟牛顿法（DFP BFGS LBFGS VLBFGS）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文假设读者对凸优化有基本了解，主要归纳一些基础算法，以便查阅。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=\min&amp;space;f(x)&amp;space;\triangleq&amp;space;g(x)&amp;pl
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Optimization" scheme="http://shuaiyy.cn/tags/Optimization/"/>
    
  </entry>
  
  <entry>
    <title>我的报告 Decentralized Privacy-Preserving Low-Rank Matrix Completion</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2014-11-26-Presentation-at-Chinese-Academy-of-Science/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2014-11-26-Presentation-at-Chinese-Academy-of-Science/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/public/img/posts/s1.png" alt="1"></p><p>###我的报告</p><p>####Section 0: Introduce Myself<br>Page 1</p><ul><li>Good afternoon everyone! My name is Anya Lin. I’m a second-year master candidate from University of Science and Technology of China. It’s my great pleasure to introduce to you the Decentralized Privacy-Preserving Low-Rank Matrix Completion. It’s a joint work with my supervisor, Prof. Ling from USTC.</li><li>Before I start, I want to express my thanks to Prof. Ling for his patient instructions and help over the last a few months.</li></ul><p>Page 2</p><ul><li>Here’s the outline of my presentation.</li><li>First is the introduction.</li><li>And then the centralized matrix completion problem.</li><li>We develop a decentralized algorithm in section 3, and our algorithm is derived from a centralized algorithm as I will talk about in section 2.</li><li>Next, I will introduce the main result of the topology-dependent privacy preservation.</li><li>At last, it’s the conclusion.</li></ul><p>####Section 1: Introduction<br>Page 3</p><ul><li>OK， let’s go into the introduction.</li></ul><p>Page 4</p><ul><li>I’d like to begin with the concept of matrix completion. So what is matrix completion? As we can see in this picture, we have an incomplete matrix, whose entries are known only for a subset of the whole matrix. And the rank of the matrix is very small compared with the size of the matrix.</li><li>The goal of the matrix completion is to recover all these unknown entries of of the matrix, as the right-side picture shows. Here, Z is the recovery of W.</li></ul><p>Page 5</p><ul><li>There’s many applications of such a problem. Like image processing, recommendation system and so on. Here are 2 examples. The first one is a problem of image processing. The left picture has a lot of noises, or say, only a part of the original picture is known. By using the fact that the original picture is usually low-rank, we can matrix completion to denoise the picture and get a clear version of high quality as the right picture shows.</li><li>The second example is more close to our lives. It’s related to a recommendation system. As you can see, it’s a webpage of Douban Movie. A user sees a movie, such as Interstella, and then scores it on the website. Here we can imagine a huge matrix with rows representing users and columns the movies. This matrix is incomplete and it’s low-rank. Once this matrix is completed, the website can recommend new movies to users.</li></ul><p>Page 6</p><ul><li>Now, here comes a privacy concern. First what is privacy? Privacy is the values one considers private. In the example we mentioned just now, the users’ scores of the movies are privacy, because one may not want others to know what movies he has seen or likes. Also, the entries of the matrix could be medical records of patients, or selling data of merchants. These data are considered as privacy.</li><li>Obviously, no one wants the leakage of his privacy.</li><li>However, in reality there may exist a malicious agent, a bad guy. For some reasons you have to give your private data to it, but you don’t know wether you can trust it or not.</li><li>In this situation, we need privacy-preservation. Privacy-preservation is the ability to prevent a malicious agent from obtaining or reconstructing the private data.</li></ul><p>####Section 2: Centralized Matrix Completion Problem<br>Page 7</p><ul><li>Now let’s go into the centralized matrix completion problem.</li></ul><p>Page 8</p><ul><li>When we are faced with a low-rank matrix completion problem, the intuitive thought would be to minimize the rank of the matrix, but this is a nonconvex problem. </li><li>Therefore, we insteadly minimize the nuclear-norm the the matrix, since nuclear-norm is the approximation of the rank and it’s convex.</li><li>Another approach is if the rank of matrix is known to be r as a prior theoreticallyor empirically, we can get the matrix factorization formulation. This approach is advantageous over the nuclear-norm approach since the latter one needs sigular value decomposition, which is computationally expensive and even intractable in decentralized computing.</li><li>A centralized algorithm called LMaFit to solve this is as the following steps shows.</li><li>We have to keep in mind that our algorithm is derived from LMaFit.</li></ul><p>####Section 3: Decentralized Matrix Completion Problem<br>Page 9</p><ul><li>After the centralized problem, let’s go into the decentralized one.</li></ul><p>Page 10</p><ul><li>In decentralized computing, we have a network composed of L agents.</li><li>There is an undirected edge between two agents if they can communicate with each other through one hop.</li><li>The goal of all the agents in such a network is to collaboratively complete a low-rank matrix in a decentralized fashion.</li></ul><p>Page 11</p><ul><li>To be specific, we segment the whole data matrix W into groups of columns. And do the same to Y and Z. Each agent i in the network holds the corresponding Zi, Yi and entries of Wi. </li><li>However, X cannot be segmented and distributed to agents because the update of X contains the summation of ZiYi’ over all agents. So we let each agent i holds a local copy X(i) of X.</li><li>After doing this, we get a naive decentralized implementation of LMaFit. At iteration k, each agent i does the following steps respectively.</li><li>Notice that the update of X requires information aggregation of all agents. So here is the challenge: informationaggregationofallagentsisimpossible in real decentralized network unless every agent is connected to all the other agents. </li><li>How to deal with this challenge?</li></ul><p>Page 12</p><ul><li>The answer is dynamic average consensus. Recall that each agent i holds a local copy X(i) of X. If we can make sure that X(i) equals to X for all i, the challenge is solved. </li><li>To do this, we choose c to be 1/L and the update of X becomes the average consensus problem, as we can see in equation (8), X(i) is the average of all the ZiYi’.</li><li>At iteration k,we formulate the average consensus problem as equation (9). The constraint means that instead of letting all the X(i) to be identical we choose to let each X(i) equals to it neighboring X(j).</li><li>A key observation is that exact average consensus at every iteration is not necessary. We use EXTRA to do inexact dynamic average consensus, which saves the computational cost.</li></ul><p>Page 13</p><ul><li>Our decentralized algorithm called D-LMaFit is developed as below.</li><li>Step 1 is the initialization.</li><li>Step 2, use EXTRA to do the inexact average consensus problem.</li><li>Step 3, update Y and X respectively. </li></ul><p>Page 14</p><ul><li>The performance of D-LMaFit is shown in these two pictures. (Explain what these pictures indicate to the audience)</li></ul><p>####Section 4: Topology-Dependent Privacy Preservation<br>Page 15</p><ul><li>Now let’s go into the section of the topology-dependent privacy preservation.</li></ul><p>Page 16</p><ul><li>First compare decentralized algorithm with centralized one.</li><li>Centralized algorithm needs a fusion center to collect global data. What if the fusion center is a malicious agent?</li><li>Oops TT, you’ll lose all your privacy.</li><li>How about the decentralzied algorithm? One important advantage of decentralized algortihm over a centralized is there’s no global data collection, each agent observes part of the raw data and communicates with its neighboring agent(s). It seems safer.</li><li>But things aren’t so lucky in reality. Because the communication of X(i) among the network may lead to information leakage.</li></ul><p>Page 17</p><ul><li>How does this happen? Suppose in a network as this picture shows, we have a malicious agent M, and M attempts to recover the local data matrices of some other agents through information exchange.</li><li>M is interested in recovering the local data Wi, or equivalently Yi or Zi of a set of agents i∈I.</li><li>When the iteration k is large enough, X(i) will be identical. So if a malicious agent M somehow knows other agents’ Yi, it can recover the data Zi of agent i by doing X(M)Yi.</li><li>So our concern is, is there any possibility that the malicious agent M can somehow obtain Yi of agent i, and thus get Zi, which is private.</li></ul><p>Page 18</p><ul><li>Before going to details, consider two simple topologies.</li><li>(Explain the two topologies)</li><li>Under what conditions can not a malicious agent M reconstruct the sensitive information of P and Q ?</li></ul><p>Page 19</p><ul><li>Recall the update of X.</li><li>If you could just take a look at the equation, you can find that if the topology is as in the left picture, M can reconstruct ZiYi’ and it may be able to solve Yi so that gets the privacy of P and Q.</li><li>But if the topology is as shown in the right picture. M cannot get the private data of P and Q. Why?</li><li>(Explain with the equation)</li><li>M can solve a series of linear inverse problems and calculate the values of ZiYi’, as what we have said just now.</li></ul><p>Page 20</p><ul><li>Now we get a naive conclusion.</li></ul><p>Page 21</p><ul><li>So the privacy-preserving problem boils down to the linear inverse problem. First we define some variables as this.</li><li>And further we define A and B.</li><li>Using these definition,the update of X can be represented by (14).</li></ul><p>Page 22</p><ul><li>Rewrite this as a linear time-invariant systems we get (15). In this system, QI selects those row blocks in Q belonging to the agents in I, and BI selects the corresponding columns in B. QIC and BIC selects the other corresponding row blocks and columns which do not belong to the agents in I.</li><li>Our analysis uses the concept of z-transfer matrix of (15). The concept is from modern control theory.</li><li>Obviously, rank(T)=rank(TI TIC), since the latter matrix is just a column rearrangement of the former one. </li><li>Now we are ready to develop our theorem.</li></ul><p>Page 23</p><ul><li>Check the proof of the suffienciency of our theorem, it’s rather straightforward.</li><li>If this condition is satisfired, then M has full knowledge of all the X(i).</li><li>So M can solve a series of linear inverse problems.</li></ul><p>Page 24</p><ul><li>The proof of necessity is a little bit complicated. Here’s the only the simplified version of the proof.</li><li>First we show that to determine a unique sequence of Q􏰇 from V􏰇 , we must have (18).</li><li>Suppose (18) doesn’t hold, then there exists at least one column of TI that is linearly dependent on the other columns of T. Then there exists a Q with that column nonzero, and satisfies TQ=0. This corresponds to a nonzero input in I, but the output V is zero for all time. Thus this nonzero input cannot be recovered. This contradicts with the hypothesis. So (18) must hold.</li><li>(Explain these items)</li></ul><p>Page 25</p><ul><li>(Explain these items)</li></ul><p>####Section 5: Conclusion<br>Page 26</p><ul><li>I’d like to quickly go over the main point of today’s topic.</li></ul><p>Page 27</p><ul><li>First, we propose a decentralized privacy-preserving algorithm, D-LMaFit, to solve the matrix completion problem.</li><li>We solve dynamic average consensus subproblem inexactly.</li><li>We prove the topology-dependent privacy-preserving theorem. It provides a guideline of designing a privacy-preserving network.</li></ul><p>Page 28</p><ul><li>Still we’ve got work to do in the future. (Read items)</li></ul><p>Page 29</p><ul><li>I guess that’s it. Thank you all very much for listening. Now if you have any question, please feel free to ask me.</li></ul><p>###故事<br>这学期我在中科院数学与系统科学研究院(AMSS)访问。第一次参与这边的讨论班时，我就被惊到了：学生做报告也全程英文，不愧是<a href="http://lsec.cc.ac.cn/~yyx/chinese/indexc.htm" target="_blank" rel="external">袁亚湘</a>老师的学生。于是，11月25日，我也在这儿完成了自己第一次的英文学术报告。</p><ol><li>报告前3天，我问盛镇醴师兄他们报告前会不会排练，师兄说：“肯定要啊！上次去葡萄牙开会，<a href="http://www.se.cuhk.edu.hk/people/sqma.html" target="_blank" rel="external">马士谦</a>师兄已经讲得那么好了，都还又自己私下练习了5、6遍。师兄真的可以做到每句话精确到几秒钟！”太荔枝了有木有TT。</li><li>于是我也练习了。果然只有努力了内心才会踏实。在当天的报告中，我不仅不紧张，还在瞅到台下一堆人的专注神情时，心里突然弹幕全开：“哇，这感觉好爽。”</li></ol><p>在记录报告之前，插播一段回忆：<br>大三暑假，我参加<a href="http://china.ican-contest.org/index.html" target="_blank" rel="external">中国大学生物联网创新创业大赛</a>，正式比赛前一天系里组织答辩练习，我们组讲得一塌糊涂。那一晚，我和向国菲师兄在实验室通宵改幻灯片，准备发言稿，然后一句一句地练习。中途师兄压力太大又累得不行溜出去躲着抽了根烟，回来被我发现了教育了一顿，嗅觉就是这么灵敏没办法。直到凌晨4点，终于觉得还算满意了，两人躺椅子上睡了会儿，当然我被蚊子咬安逸了。早晨7点，寝室开门，两人各自回去洗澡调整状态。9点，开始比赛。不知道为什么突然想起这个，太，美好了。尽管当时觉得真苦逼。</p><p>###资料<br>【1】<a href="http://www.zhihu.com/question/24544386/answer/30237316" target="_blank" rel="external">有哪些高级的英语表达技巧，让人一听就很地道？</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/public/img/posts/s1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;###我的报告&lt;/p&gt;
&lt;p&gt;####Section 0: Introduce Myself&lt;br&gt;Page 1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good afternoon 
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Math Optimization" scheme="http://shuaiyy.cn/tags/Math-Optimization/"/>
    
  </entry>
  
  <entry>
    <title>什么是 P, NP, NP-complete, NP-hard</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2014-11-09-What-is-NP-Hard/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2014-11-09-What-is-NP-Hard/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-05-08T16:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>###相关概念<br>NP-hard（non-deterministic polynomial-time hard）</p><ol><li>P：能在多项式时间内解决</li><li>NP：不能在多项式时间内解决或不确定能不能在多项式时间内解决，但一旦你找到一个解，只需要多项式时间去验证这个解是正确的</li><li>NP-hard：如果一个问题是NP-hard，意味着可以将任意NP问题化约到这个问题。如果可以解这个问题，那么可以轻松地解任意NP问题。</li><li>NPC：NP完全问题，所有NP问题在多项式时间内都能化约（Reducibility）到某一NP问题，这一NP问题就是NPC问题，即解决了此NPC问题，所有NP问题也都解决了。</li></ol><p>###资料原文<br>These refer to how long it takes a program to run.  Problems in class P can be solved with algorithms that run in <strong>polynomial time</strong>.</p><p>Say you have an algorithm that finds the smallest integer in an array.  One way to do this is by iterating over all the integers of the array and keeping track of the smallest number you’ve seen up to that point.  Every time you look at an element, you compare it to the current minimum, and if it’s smaller, you update the minimum.</p><p>How long does this take?  Let’s say there are n elements in the array.  For every element the algorithm has to perform a constant number of operations.  Therefore we can say that the algorithm runs in O(n) time, or that the runtime is a linear function of how many elements are in the array.  So this algorithm runs in <strong>linear time</strong>.</p><p>You can also have algorithms that run in <strong>quadratic time</strong> (O(n^2)), <strong>exponential time</strong> (O(2^n)), or even <strong>logarithmic time</strong> (O(log n)).  Binary search (on a balanced tree) runs in logarithmic time because the height of the binary search tree is a logarithmic function of the number of elements in the tree.</p><p>If the running time is some polynomial function of the size of the input, for instance if the algorithm runs in linear time or quadratic time or cubic time, then we say the algorithm runs in <strong>polynomial time</strong> and the problem it solves is in class <strong>P</strong>.</p><p>###<strong>NP</strong><br>Now there are a lot of programs that don’t (necessarily) run in polynomial time on a regular computer, but do run in polynomial time on a nondeterministic Turing machine.  These programs solve problems in <strong>NP</strong>, which stands for <strong>nondeterministic polynomial time</strong>.  A nondeterministic Turing machine can do everything a regular computer can and more. This means all problems in P are also in NP.</p><p>An equivalent way to define NP is by pointing to the problems that can be verified in polynomial time.  This means there is not necessarily a polynomial-time way to find a solution, but once you have a solution it only takes polynomial time to verify that it is correct.</p><p>Some people think P = NP, which means any problem that can be verified in polynomial time can also be solved in polynomial time and vice versa.  If they could prove this, it would revolutionize computer science because people would be able to construct faster algorithms for a lot of important problems.</p><p>###<strong>NP-hard</strong><br>What does NP-hard mean?  A lot of times you can solve a problem by reducing it to a different problem.  I can reduce Problem B to Problem A if, given a solution to Problem A, I can easily construct a solution to Problem B.  (In this case, “easily” means “in polynomial time.”)</p><p>If a problem is <strong>NP-hard</strong>, this means I can reduce any problem in NP to that problem.  This means if I can solve that problem, I can easily solve any problem in NP.  If we could solve an NP-hard problem in polynomial time, this would prove P = NP.</p><p>###<strong>NP-complete</strong><br>A problem is <strong>NP-complete</strong> if the problem is both</p><ul><li>NP-hard, and</li><li>in NP.</li></ul><p>###参考资料<br>【1】<a href="http://www.quora.com/What-are-P-NP-NP-complete-and-NP-hard" target="_blank" rel="external">What are P, NP, NP-complete, and NP-hard?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###相关概念&lt;br&gt;NP-hard（non-deterministic polynomial-time hard）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;P：能在多项式时间内解决&lt;/li&gt;
&lt;li&gt;NP：不能在多项式时间内解决或不确定能不能在多项式时间内解决，但一旦你找到一个解，只需
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="Math" scheme="http://shuaiyy.cn/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴大数据竞赛回顾与总结</title>
    <link href="http://shuaiyy.cn/2017/09/17/%E7%A7%91%E7%A0%94/2014-10-01-Alibaba-Big-Data/"/>
    <id>http://shuaiyy.cn/2017/09/17/科研/2014-10-01-Alibaba-Big-Data/</id>
    <published>2017-09-17T08:45:30.910Z</published>
    <updated>2016-06-11T16:08:49.705Z</updated>
    
    <content type="html"><![CDATA[<p>8个月前，苏宇师兄问我对<a href="http://102.alibaba.com/competition/addDiscovery/index.htm" target="_blank" rel="external">阿里巴巴大数据竞赛</a>感兴趣吗。正好我选修了<a href="http://staff.ustc.edu.cn/~cheneh/" target="_blank" rel="external">陈恩红</a>老师的《机器学习与数据挖掘》，很好奇这门课在实际中的应用；身为淘宝用户，也好奇我是如何被推荐的。于是和师兄一起参加比赛，加上计算机学院的刘惠民同学，我们组成了名叫<code>Rosemary</code>三人团队。这次大赛总共有7276支队伍参赛，我们止步于第二赛季。第一赛季排名56；第二赛季排名68。</p><h3 id="开放数据"><a href="#开放数据" class="headerlink" title="开放数据"></a>开放数据</h3><table class="table table-bordered table-striped table-condensed"><br>   <tr><br>     <th>字段</th><br>      <th>字段说明</th><br>      <th>提取说明</th><br>   </tr><br>   <tr><br>      <td>user_id</td><br>      <td>用户标记</td><br>      <td>抽样、字段加密</td><br>   </tr><br>   <tr><br>      <td>Time</td><br>      <td>行为时间</td><br>      <td>精度到天级别、隐藏年份</td><br>   </tr><br>   <tr><br>      <td>action_type</td><br>      <td>用户对品牌的行为类型</td><br>      <td>包括点击（0）、购买（1）、加入购物车（2）、收藏（3）四种行为 </td><br>  </tr><br>   <tr><br>      <td>brand_id</td><br>      <td>品牌数字ID</td><br>      <td>抽样、字段加密</td><br>   </tr><br></table><br>### 比赛任务<br>根据用户4个月在天猫的行为日志，建立用户的品牌偏好，并预测他们在将来一个月内对品牌下商品的购买行为。<br><br>### 评估指标<br>大赛最终的比赛成绩排名以F1得分为准。<br><br>准确率：<img src="http://latex.codecogs.com/gif.latex?Precision=\frac{\sum_i^N&space;hitBrands_i}{\sum_i^N&space;pBrands_i}" title="Precision=\frac{\sum_i^N hitBrands_i}{\sum_i^N pBrands_i}"><br><br>召回率：<img src="http://latex.codecogs.com/gif.latex?Recall=\frac{\sum_i^M&space;hitBrands_i}{\sum_i^M&space;bBrands_i}" title="Recall=\frac{\sum_i^M hitBrands_i}{\sum_i^M bBrands_i}"><br><br>F1-Score：<img src="http://latex.codecogs.com/gif.latex?F_1=\frac{2\times&space;P\times&space;R}{P&plus;R}" title="F_1=\frac{2\times P\times R}{P+R}"><br><br>其中，<br><br>- N 为参赛队预测的用户数；M 为实际产生成交的用户数量<br>- pBrandsi为对用户i 预测他(她)会购买的品牌列表个数；bBrandsi为用户i 真实购买的品牌个数<br>- hitBrandsi对用户i预测的品牌列表与用户i真实购买的品牌交集的个数<br><br>### 解读<code>准确率</code>、<code>召回率</code>和<code>F1-Score</code><br>准确率就是正确预测数目比上预测总数目。召回率就是正确预测数目比上真实总数目。F1-Score是准确率和召回率的调和平均。理论上，准确率与召回率并没有必然的联系；但在实际中，这二者往往此消彼长、相互制约。有研究表明，在不牺牲准确率的情况下，获得一个高召回率是很难的。在赛题环境下举个栗子：<br><br><table class="table table-bordered table-striped table-condensed"><br>   <tr><br>     <th>我们预测出</th><br>      <th>会有3个人买东西，A买品牌a，B买品牌b，C买P品牌c</th><br>   </tr><br>   <tr><br>      <td>真实情况是</td><br>      <td>有4个人买了东西，这4个人分别是A，B，C，D，其中A买a和b，B买b，C买b和c，D买a。</td><br>   </tr><br></table><p>按照我们的预测，准确率达到了100%，而召回率仅为50%。由此可见，想取得一个较好的F1-Score成绩，需要保证预测的数据尽量hit之外，还要保证预测的数据能够覆盖尽量多的真实数据。具体到比赛中，就需要很好地确定每个被预测的用户可能会买多少个品牌。</p><p>通过对这三个评判标准的分析，我们初步确定了第一赛季所用的策略。</p><h3 id="第一赛季"><a href="#第一赛季" class="headerlink" title="第一赛季"></a>第一赛季</h3><p>大致的方案是：</p><ol><li>加权对用户4种行为次数求和，得到简单的用户ID（行）与品牌ID（列）的<code>兴趣度</code>（值）矩阵。</li><li>统计前4个月平均每个月有多少用户购买超过2个品牌的东西，记为B。</li><li>根据用户前4个月的购买行为，按照<code>购买力</code>划分用户购买等级。直白解释就是你以前在天猫上平均每个月买了多少次，我就假设你下个月还会买这么多次。</li><li>第一次切分兴趣度矩阵，保留前B行矩阵。</li><li>对每个用户对不同品牌的兴趣度由高到低排序，再根据每个用户的购买力确定对该用户保留前n列的兴趣数据，并预测他会买这n个数据对应的品牌。</li></ol><p>当然，在最初的模型建立起来之后，我们还陆续加了一些规则，比如在<code>时间节截止点</code>(最后N天，N可以根据自己的理解取值)的单独分析。另外，调参数真就是一项体力活。</p><p><img src="/public/img/posts/s1.jpg" alt="1"></p><h3 id="第二赛季"><a href="#第二赛季" class="headerlink" title="第二赛季"></a>第二赛季</h3><p>（好困，需要去睡觉Zzz···）细节未完待续</p><p><img src="/public/img/posts/score0.png" alt="2"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;8个月前，苏宇师兄问我对&lt;a href=&quot;http://102.alibaba.com/competition/addDiscovery/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里巴巴大数据竞赛&lt;/a&gt;感兴趣吗。正好我选修了&lt;a
      
    
    </summary>
    
      <category term="科研" scheme="http://shuaiyy.cn/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="MachineLearning" scheme="http://shuaiyy.cn/tags/MachineLearning/"/>
    
  </entry>
  
</feed>
